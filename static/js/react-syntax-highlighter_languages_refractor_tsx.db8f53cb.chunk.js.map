{"version":3,"sources":["../node_modules/refractor/lang/typescript.js","../node_modules/refractor/lang/tsx.js"],"names":["typescript","Prism","languages","extend","keyword","builtin","ts","module","exports","displayName","aliases","refractorJsx","__webpack_require__","refractorTypescript","tsx","register","util","clone"],"mappings":"gGAMA,SAAAA,EAAAC,GACAA,EAAAC,UAAAF,WAAAC,EAAAC,UAAAC,OAAA,cAEAC,QAAA,yXACAC,QAAA,oEAEAJ,EAAAC,UAAAI,GAAAL,EAAAC,UAAAF,WAVAO,EAAAC,QAAAR,EACAA,EAAAS,YAAA,aACAT,EAAAU,QAAA,yCCFA,IAAAC,EAAmBC,EAAQ,KAE3BC,EAA0BD,EAAQ,KAMlC,SAAAE,EAAAb,GACAA,EAAAc,SAAAJ,GACAV,EAAAc,SAAAF,GACA,IAAAb,EAAAC,EAAAe,KAAAC,MAAAhB,EAAAC,UAAAF,YACAC,EAAAC,UAAAY,IAAAb,EAAAC,UAAAC,OAAA,MAAAH,GARAO,EAAAC,QAAAM,EACAA,EAAAL,YAAA,MACAK,EAAAJ,QAAA","file":"static/js/react-syntax-highlighter_languages_refractor_tsx.db8f53cb.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = typescript;\ntypescript.displayName = 'typescript';\ntypescript.aliases = ['ts'];\n\nfunction typescript(Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n    keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\\b/,\n    builtin: /\\b(?:string|Function|any|number|boolean|Array|symbol|console)\\b/\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n}","'use strict';\n\nvar refractorJsx = require('./jsx.js');\n\nvar refractorTypescript = require('./typescript.js');\n\nmodule.exports = tsx;\ntsx.displayName = 'tsx';\ntsx.aliases = [];\n\nfunction tsx(Prism) {\n  Prism.register(refractorJsx);\n  Prism.register(refractorTypescript);\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript);\n}"],"sourceRoot":""}