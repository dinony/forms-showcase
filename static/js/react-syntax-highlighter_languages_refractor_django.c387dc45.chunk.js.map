{"version":3,"sources":["../node_modules/refractor/lang/django.js"],"names":["django","Prism","_django_template","property","pattern","greedy","inside","string","keyword","operator","function","important","variable","punctuation","languages","extend","comment","tag","insertBefore","javascript","script","css","style","jinja2","module","exports","displayName","aliases"],"mappings":"2FAMA,SAAAA,EAAAC,GAGA,IAAAC,EAAA,CACAC,SAAA,CACAC,QAAA,8BACAC,QAAA,EACAC,OAAA,CACAC,OAAA,CACAH,QAAA,kCACAC,QAAA,GAEAG,QAAA,6XACAC,SAAA,sEACAC,SAAA,m0BACAC,UAAA,sBACAC,SAAA,WACAC,YAAA,iBAIAZ,EAAAa,UAAAd,OAAAC,EAAAa,UAAAC,OAAA,UACAC,QAAA,kCAGAf,EAAAa,UAAAd,OAAAiB,IAAAb,QAAA,oGACAH,EAAAa,UAAAI,aAAA,kBAAAhB,GACAD,EAAAa,UAAAI,aAAA,eAAAhB,EAAAD,EAAAa,UAAAd,OAAAiB,KAEAhB,EAAAa,UAAAK,aAEAlB,EAAAa,UAAAI,aAAA,kBAAAhB,EAAAD,EAAAa,UAAAd,OAAAoB,QACAnB,EAAAa,UAAAd,OAAAoB,OAAAd,OAAAC,OAAAD,OAAAJ,GAGAD,EAAAa,UAAAO,MAEApB,EAAAa,UAAAI,aAAA,mBACAD,IAAAf,EAAAC,UACKF,EAAAa,UAAAd,OAAAsB,OACLrB,EAAAa,UAAAd,OAAAsB,MAAAhB,OAAAC,OAAAD,OAAAJ,GAIAD,EAAAa,UAAAS,OAAAtB,EAAAa,UAAAd,OAhDAwB,EAAAC,QAAAzB,EACAA,EAAA0B,YAAA,SACA1B,EAAA2B,QAAA","file":"static/js/react-syntax-highlighter_languages_refractor_django.c387dc45.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = django;\ndjango.displayName = 'django';\ndjango.aliases = ['jinja2'];\n\nfunction django(Prism) {\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n  var _django_template = {\n    property: {\n      pattern: /(?:{{|{%)[\\s\\S]*?(?:%}|}})/g,\n      greedy: true,\n      inside: {\n        string: {\n          pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        },\n        keyword: /\\b(?:\\||load|verbatim|widthratio|ssi|firstof|for|url|ifchanged|csrf_token|lorem|ifnotequal|autoescape|now|templatetag|debug|cycle|ifequal|regroup|comment|filter|endfilter|if|spaceless|with|extends|block|include|else|empty|endif|endfor|as|endblock|endautoescape|endverbatim|trans|endtrans|[Tt]rue|[Ff]alse|[Nn]one|in|is|static|macro|endmacro|call|endcall|set|endset|raw|endraw)\\b/,\n        operator: /[-+=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n        function: /\\b(?:_|abs|add|addslashes|attr|batch|callable|capfirst|capitalize|center|count|cut|d|date|default|default_if_none|defined|dictsort|dictsortreversed|divisibleby|e|equalto|escape|escaped|escapejs|even|filesizeformat|first|float|floatformat|force_escape|forceescape|format|get_digit|groupby|indent|int|iriencode|iterable|join|last|length|length_is|linebreaks|linebreaksbr|linenumbers|list|ljust|lower|make_list|map|mapping|number|odd|phone2numeric|pluralize|pprint|random|reject|rejectattr|removetags|replace|reverse|rjust|round|safe|safeseq|sameas|select|selectattr|sequence|slice|slugify|sort|string|stringformat|striptags|sum|time|timesince|timeuntil|title|trim|truncate|truncatechars|truncatechars_html|truncatewords|truncatewords_html|undefined|unordered_list|upper|urlencode|urlize|urlizetrunc|wordcount|wordwrap|xmlattr|yesno)\\b/,\n        important: /\\b-?\\d+(?:\\.\\d+)?\\b/,\n        variable: /\\b\\w+?\\b/,\n        punctuation: /[[\\];(),.:]/\n      }\n    }\n  };\n  Prism.languages.django = Prism.languages.extend('markup', {\n    comment: /(?:<!--|{#)[\\s\\S]*?(?:#}|-->)/\n  }); // Updated html tag pattern to allow template tags inside html tags\n\n  Prism.languages.django.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^>=]+))?)*\\s*\\/?>/i;\n  Prism.languages.insertBefore('django', 'entity', _django_template);\n  Prism.languages.insertBefore('inside', 'tag', _django_template, Prism.languages.django.tag);\n\n  if (Prism.languages.javascript) {\n    // Combine js code and template tags painting inside <script> blocks\n    Prism.languages.insertBefore('inside', 'string', _django_template, Prism.languages.django.script);\n    Prism.languages.django.script.inside.string.inside = _django_template;\n  }\n\n  if (Prism.languages.css) {\n    // Combine css code and template tags painting inside <style> blocks\n    Prism.languages.insertBefore('inside', 'atrule', {\n      tag: _django_template.property\n    }, Prism.languages.django.style);\n    Prism.languages.django.style.inside.string.inside = _django_template;\n  } // Add an Jinja2 alias\n\n\n  Prism.languages.jinja2 = Prism.languages.django;\n}"],"sourceRoot":""}