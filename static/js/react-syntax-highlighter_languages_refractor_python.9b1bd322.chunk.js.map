{"version":3,"sources":["../node_modules/refractor/lang/python.js"],"names":["python","Prism","languages","comment","pattern","lookbehind","triple-quoted-string","greedy","alias","string","function","class-name","keyword","builtin","boolean","number","operator","punctuation","module","exports","displayName","aliases"],"mappings":"4FAMA,SAAAA,EAAAC,GACAA,EAAAC,UAAAF,OAAA,CACAG,QAAA,CACAC,QAAA,eACAC,YAAA,GAEAC,uBAAA,CACAF,QAAA,sBACAG,QAAA,EACAC,MAAA,UAEAC,OAAA,CACAL,QAAA,kCACAG,QAAA,GAEAG,SAAA,CACAN,QAAA,4CACAC,YAAA,GAEAM,aAAA,CACAP,QAAA,mBACAC,YAAA,GAEAO,QAAA,wLACAC,QAAA,shBACAC,QAAA,0BACAC,OAAA,6FACAC,SAAA,uEACAC,YAAA,iBAhCAC,EAAAC,QAAAnB,EACAA,EAAAoB,YAAA,SACApB,EAAAqB,QAAA","file":"static/js/react-syntax-highlighter_languages_refractor_python.9b1bd322.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = python;\npython.displayName = 'python';\npython.aliases = [];\n\nfunction python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    'triple-quoted-string': {\n      pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    keyword: /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:True|False|None)\\b/,\n    number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n    operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}"],"sourceRoot":""}