{"version":3,"sources":["views/home/examples/GettingStarted.js","webpack:///./src/views/components/core/examples/DefaultValues.js?fcaa","webpack:///./src/views/components/core/examples/FormValues.js?682e","webpack:///./src/views/components/core/examples/SimpleForm.js?2e3e","webpack:///./src/views/components/core/examples/FormValidation.js?9f73","webpack:///./src/views/components/core/examples/DisabledForm.js?b7ee","webpack:///./src/views/components/core/examples/PlaintextForm.js?3747","webpack:///./src/views/components/core/examples/FieldCallbacks.js?3df7","webpack:///./src/views/components/core/examples/FieldLifecycles.js?8a90","webpack:///./src/views/components/core/examples/SimpleFieldGroup.js?0de7","webpack:///./src/views/components/core/examples/ReusableFieldGroup.js?b2b0","webpack:///./src/views/components/core/examples/SimpleValidationSummary.js?7155","webpack:///./src/views/components/core/examples/InputTypes.js?51ee","webpack:///./src/views/components/core/examples/CustomInput.js?7438","webpack:///./src/views/components/core/examples/SimpleFormButton.js?fb75","webpack:///./src/views/components/core/examples/DisabledFormButton.js?b926","webpack:///./src/views/components/core/examples/FormButtonSubmitArgs.js?dfc7","webpack:///./src/views/components/core/examples/SimpleFormText.js?8e66","webpack:///./src/views/components/bootstrap/examples/InputTypes.js?dc68","webpack:///./src/views/components/bootstrap/examples/PlainTextInput.js?28e5","webpack:///./src/views/components/bootstrap/examples/InputPrefixSuffix.js?69d2","webpack:///./src/views/components/bootstrap/examples/SimpleSelect.js?e58a","webpack:///./src/views/components/bootstrap/examples/SimpleCheck.js?0982","webpack:///./src/views/components/bootstrap/examples/SimpleDatePicker.js?150c","webpack:///./src/views/components/bootstrap/examples/SimpleValidationSummary.js?1783","webpack:///./src/views/components/bootstrap/examples/SimpleFormButton.js?f522","webpack:///./src/views/components/bootstrap/examples/DisabledFormButton.js?a54b","webpack:///./src/views/components/bootstrap/examples/SimpleOnOff.js?b039","webpack:///./src/views/components/intl/examples/IntlFormExample.js?a2eb","views/api/core/examples/Form.js","views/api/core/examples/ValuesExample.js","views/api/core/examples/Field.js","views/api/core/examples/FieldGroup.js","views/api/core/examples/ValidationSummary.js","views/api/core/examples/Input.js","views/api/core/examples/CustomInput.js","views/api/core/examples/CustomInputUsage.js","views/api/core/examples/FormButton.js","views/api/core/examples/FormText.js","views/api/core/examples/Validators.js","views/api/core/examples/ValidatorsWithParams.js","views/api/core/examples/ErrorObject.js","views/api/core/examples/ErrorMessage.js","views/api/core/examples/CustomValidator.js","views/api/core/examples/CustomAsyncValidator.js","views/api/core/examples/CustomFormValidator.js","views/api/bootstrap/examples/Input.js","views/api/bootstrap/examples/Select.js","views/api/bootstrap/examples/Check.js","views/api/bootstrap/examples/DatePicker.js","views/api/bootstrap/examples/ValidationSummary.js","views/api/bootstrap/examples/FormButton.js","views/api/bootstrap/examples/OnOffToggleButton.js","views/api/intl/examples/IntlForm.js","views/home/Home.jsx","views/components/shared/ComponentPage/ComponentPage.jsx","views/components/shared/Showcase/Showcase.jsx","views/components/core/examples/SimpleForm.js","views/components/core/examples/DefaultValues.js","views/components/core/examples/FormValues.js","views/components/core/examples/FormValidation.js","views/components/core/examples/DisabledForm.js","views/components/core/examples/PlaintextForm.js","views/components/core/FormPage.jsx","views/components/core/examples/FieldCallbacks.js","views/components/core/examples/FieldLifecycles.js","views/components/core/FieldPage.jsx","views/components/core/examples/SimpleFieldGroup.js","views/components/core/examples/ReusableFieldGroup.js","views/components/core/FieldGroupPage.jsx","views/components/core/examples/SimpleValidationSummary.js","views/components/core/ValidationSummaryPage.jsx","views/components/core/examples/InputTypes.js","views/components/core/examples/CustomInput.js","views/components/core/InputPage.jsx","views/components/core/examples/SimpleFormButton.js","views/components/core/examples/DisabledFormButton.js","views/components/core/examples/FormButtonSubmitArgs.js","views/components/core/FormButtonPage.jsx","views/components/core/examples/SimpleFormText.js","views/components/core/FormTextPage.jsx","views/not-found/NotFound.jsx","views/components/core/Core.jsx","views/components/bootstrap/examples/InputTypes.js","views/components/bootstrap/examples/PlainTextInput.js","views/components/bootstrap/examples/InputPrefixSuffix.js","views/components/bootstrap/InputPage.jsx","views/components/bootstrap/examples/SimpleSelect.js","views/components/bootstrap/SelectPage.jsx","views/components/bootstrap/examples/SimpleCheck.js","views/components/bootstrap/CheckPage.jsx","views/components/bootstrap/examples/SimpleDatePicker.js","views/components/bootstrap/DatePickerPage.jsx","views/components/bootstrap/examples/SimpleValidationSummary.js","views/components/bootstrap/ValidationSummaryPage.jsx","views/components/bootstrap/examples/SimpleFormButton.js","views/components/bootstrap/examples/DisabledFormButton.js","views/components/bootstrap/FormButtonPage.jsx","views/components/bootstrap/examples/SimpleOnOff.js","views/components/bootstrap/OnOffToggleButtonPage.jsx","views/components/bootstrap/Bootstrap.jsx","views/components/intl/examples/IntlFormExample.js","views/components/intl/IntlFormPage.jsx","views/components/intl/Intl.jsx","views/components/Components.jsx","views/api/shared/ApiPage/ApiPage.jsx","views/api/shared/PropInfo/PropInfo.jsx","views/api/core/FormPage.jsx","views/api/core/FieldPage.jsx","views/api/core/FieldGroupPage.jsx","views/api/core/ValidationSummaryPage.jsx","views/api/core/InputPage.jsx","views/api/core/FormButtonPage.jsx","views/api/core/FormTextPage.jsx","views/api/core/ValidatorsPage.jsx","views/api/core/Core.jsx","views/api/bootstrap/InputPage.jsx","views/api/bootstrap/SelectPage.jsx","views/api/bootstrap/CheckPage.jsx","views/api/bootstrap/DatePickerPage.jsx","views/api/bootstrap/ValidationSummaryPage.jsx","views/api/bootstrap/FormButtonPage.jsx","views/api/bootstrap/OnOffToggleButtonPage.jsx","views/api/bootstrap/Bootstrap.jsx","views/api/intl/IntlFormPage.jsx","views/api/intl/Intl.jsx","views/api/Api.jsx","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","GettingStartedExample","require","Home","react_default","a","createElement","className","reactstrap_es","href","src","alt","react_prism_lib_default","component","Link","to","ComponentPage","props","title","description","children","parent","rest","Object","objectWithoutProperties","parentLabel","apiLink","replace","match","concat","toLowerCase","assign","tag","Showcase","state","messageLog","showCode","logMessage","msg","_this","setState","prevState","length","splice","toConsumableArray","_this2","this","_this$props","Component","code","_this$state","id","join","Fragment","color","onClick","React","Example","_ref","build","onSubmit","values","JSON","stringify","onReset","name","label","Input","type","defaultValues","myInput","handleSubmit","randomizeDefaultValues","Math","floor","random","randomizeValues","onValidate","demoInput","disabled","myInput2","plaintext","simpleForm","formValidation","FormPage","ComponentPage_ComponentPage","shared_Showcase_Showcase","simpleFormDemo","defaultValuesDemo","valuesDemo","disabledDemo","plaintextDemo","formValidationDemo","onChange","value","onBlur","getDisplayValue","meta","getSubmitValue","callbacks","lifecycles","FieldPage","callbacksDemo","lifecyclesDemo","myGroup","myInput1","render","ContactFields","simple","reusable","FieldGroupPage","simpleDemo","reusableDemo","validators","required","handleChange","handleBlur","CustomInput","field","customProp","htmlFor","stringFormatter","inputTypes","custom","InputPage","inputTypesDemo","customDemo","asyncValidator","Promise","resolve","setTimeout","asyncValidators","submitArgs","foo","simpleFormButton","disabledFormButton","simpleFormButtonDemo","submitArgsDemo","disabledFormButtonDemo","text","param","FormTextPage","NotFound","Core","Switch","Route","path","ValidationSummaryPage","FormButtonPage","Redirect","from","exact","info","prefix","suffix","plainText","prefixSuffix","prefixSuffixDemo","options","Select","simpleSelect","SelectPage","simpleSelectDemo","Check","simpleCheck","CheckPage","simpleCheckDemo","DatePicker","dateFormat","timeFormat","simpleDatePicker","DatePickerPage","simpleDatePickerDemo","react_ocean_forms_bootstrap_build","simpleValidationSummary","simpleValidationSummaryDemo","OnOffToggleButton","simpleOnOff","OnOffToggleButtonPage","simpleOnOffDemo","Bootstrap","locale","messages","en","lblName","lblMail","submit","reset","customText","ojs_field_required","ojs_error_required","de","addLocaleData","deLocaleData","index_es","react_ocean_forms_react_intl_build_default","form","IntlFormPage","formDemo","Intl","Components","md","CoreComponents","BootstrapComponents","IntlComponents","vertical","ApiPage","codeExample","hideComponentLink","componentLink","defaultProps","PropInfo","defaultValue","deprecated","example","introExample","valuesExample","ApiPage_ApiPage","PropInfo_PropInfo","customInputExample","customInputUsageExample","paramsExample","errorExample","errorMessageExample","customValidatorExample","customAsyncValidatorExample","customFormValidatorExample","ValidatorsPage","Api","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","isOpen","HashRouter","onUpdate","window","scrollTo","dark","expand","fixed","navbar","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f899649b.chunk.js","sourcesContent":["module.exports = \"import React from 'react';\\nimport { Form, Field, Input } from 'react-ocean-forms';\\n\\nclass GettingStarted extends React.Component {\\n  handleSubmit(values) {\\n    console.log('form submitted with', values);\\n  }\\n\\n  render() {\\n    return (\\n      <Form onSubmit={this.handleSubmit}>\\n        <Field name=\\\"myInput\\\" label=\\\"Example input\\\" component={Input} />\\n        <button type=\\\"submit\\\">Submit</button>\\n      </Form>\\n    );\\n  }\\n}\\n\\nexport default GettingStarted;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input } from 'react-ocean-forms';\\n\\nclass Example extends React.Component {\\n  state = {\\n    defaultValues: {\\n      myInput: 'default value',\\n    },\\n  };\\n\\n  // Submit callback, here you'd make your api calls\\n  handleSubmit = (values) => {\\n    const { logMessage } = this.props;\\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\\n  };\\n\\n  randomizeDefaultValues = () => {\\n    this.setState({\\n      defaultValues: {\\n        myInput: `default ${(Math.floor(Math.random() * 100))}`,\\n      },\\n    });\\n  }\\n\\n  render() {\\n    const { defaultValues } = this.state;\\n\\n    return (\\n      <Form\\n        className=\\\"demo\\\"\\n        onSubmit={this.handleSubmit}\\n        defaultValues={defaultValues}\\n      >\\n        <Field name=\\\"myInput\\\" label=\\\"Example input\\\" component={Input} />\\n\\n        <p className=\\\"mt-4\\\">\\n          Current default value: {defaultValues.myInput}\\n        </p>\\n\\n        <button type=\\\"submit\\\">Submit</button>\\n        <button type=\\\"reset\\\">Reset</button>\\n        <button\\n          type=\\\"button\\\"\\n          onClick={this.randomizeDefaultValues}\\n          className=\\\"ml-1\\\"\\n        >\\n          Update default values\\n        </button>\\n      </Form>\\n    );\\n  }\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input } from 'react-ocean-forms';\\n\\nclass Example extends React.Component {\\n  state = {\\n    // Typically you'd load the values from your backend\\n    values: {\\n      myInput: 'demo value',\\n    },\\n  };\\n\\n  // Submit callback, here you'd make your api calls\\n  handleSubmit = (values) => {\\n    const { logMessage } = this.props;\\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\\n  };\\n\\n  randomizeValues = () => {\\n    this.setState({\\n      values: {\\n        myInput: `demo ${(Math.floor(Math.random() * 100))}`,\\n      },\\n    });\\n  }\\n\\n  render() {\\n    const { values } = this.state;\\n\\n    return (\\n      <Form\\n        className=\\\"demo\\\"\\n        onSubmit={this.handleSubmit}\\n        values={values}\\n      >\\n        <Field name=\\\"myInput\\\" label=\\\"Example input\\\" component={Input} />\\n\\n        <button type=\\\"submit\\\">Submit</button>\\n        <button type=\\\"reset\\\">Reset</button>\\n        <button\\n          type=\\\"button\\\"\\n          onClick={this.randomizeValues}\\n          className=\\\"ml-1\\\"\\n        >\\n          Update values\\n        </button>\\n      </Form>\\n    );\\n  }\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input } from 'react-ocean-forms';\\n\\nfunction Example({ logMessage }) {\\n  // Submit callback, here you'd make your api calls\\n  const handleSubmit = (values) => {\\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\\n  };\\n\\n  // Reset callback, can be useful in some cases for cleanup\\n  const handleReset = () => {\\n    logMessage('onReset');\\n  };\\n\\n  return (\\n    <Form\\n      className=\\\"demo\\\"\\n      onSubmit={handleSubmit}\\n      onReset={handleReset}\\n    >\\n      <Field name=\\\"myInput\\\" label=\\\"Example input\\\" component={Input} />\\n      <button type=\\\"submit\\\">Submit</button>\\n      <button type=\\\"reset\\\">Reset</button>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input, ValidationSummary } from 'react-ocean-forms';\\n\\nfunction Example({ logMessage }) {\\n  // Submit callback, here you'd make your api calls\\n  const handleSubmit = (values) => {\\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\\n  };\\n\\n  // Reset callback, can be useful in some cases for cleanup\\n  const handleReset = () => {\\n    logMessage('onReset');\\n  };\\n\\n  // Form wide validation function\\n  const handleValidate = (values) => {\\n    if (values.demoInput === 'bad') {\\n      return {\\n        demoInput: 'Invalid input!',\\n      };\\n    }\\n\\n    return null;\\n  };\\n\\n  return (\\n    <Form\\n      className=\\\"demo\\\"\\n      onSubmit={handleSubmit}\\n      onReset={handleReset}\\n      onValidate={handleValidate}\\n    >\\n      <ValidationSummary id=\\\"summary\\\" />\\n\\n      <Field name=\\\"demoInput\\\" label=\\\"Example input\\\" component={Input} />\\n\\n      <button type=\\\"submit\\\">Submit</button>\\n      <button type=\\\"reset\\\">Reset</button>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input } from 'react-ocean-forms';\\n\\nfunction Example({ logMessage }) {\\n  // Submit callback, here you'd make your api calls\\n  const handleSubmit = (values) => {\\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\\n  };\\n\\n  return (\\n    <Form\\n      className=\\\"demo\\\"\\n      onSubmit={handleSubmit}\\n      disabled\\n    >\\n      <Field name=\\\"myInput\\\" label=\\\"Example input 1\\\" component={Input} />\\n      <Field name=\\\"myInput2\\\" label=\\\"Example input 2\\\" component={Input} />\\n      <button type=\\\"submit\\\">Submit</button>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input } from 'react-ocean-forms';\\n\\nfunction Example({ logMessage }) {\\n  const defaultValues = {\\n    myInput: 'default value 1',\\n    myInput2: 'default value 2',\\n  };\\n\\n  return (\\n    <Form\\n      className=\\\"demo\\\"\\n      defaultValues={defaultValues}\\n      plaintext\\n    >\\n      <Field name=\\\"myInput\\\" label=\\\"Example input 1\\\" component={Input} />\\n      <Field name=\\\"myInput2\\\" label=\\\"Example input 2\\\" component={Input} />\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input } from 'react-ocean-forms';\\n\\nfunction Example({ logMessage }) {\\n  // onChange callback\\n  const handleChange = (value) => {\\n    logMessage('onChange, value: ' + JSON.stringify(value));\\n  };\\n\\n  // onBlur callback\\n  const handleBlur = () => {\\n    logMessage('onBlur');\\n  };\\n\\n  return (\\n    <Form className=\\\"demo\\\">\\n      <Field\\n        name=\\\"myInput\\\"\\n        label=\\\"Example input\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={Input}\\n      />\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input } from 'react-ocean-forms';\\n\\nfunction Example({ logMessage }) {\\n  const getDisplayValue = (value, meta) => {\\n    logMessage(\\n      'getDisplayValue, value: ' + JSON.stringify(value) +\\n      ', meta: ' + JSON.stringify(meta)\\n    );\\n\\n    // This value will be used by the input when the field\\n    // loads its value from the form defaults.\\n    return 'display value: ' + value;\\n  };\\n\\n  const getSubmitValue = (value, meta) => {\\n    logMessage(\\n      'getSubmitValue, value: ' + JSON.stringify(value) +\\n      ', meta: ' + JSON.stringify(meta)\\n    );\\n\\n    // This value will be used by the validators and by the\\n    // form as the submitted value of the field.\\n    return value.replace('display value:', 'submit value: ');\\n  };\\n\\n  const handleSubmit = (values) => {\\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\\n  };\\n\\n  return (\\n    <Form className=\\\"demo\\\" onSubmit={handleSubmit}>\\n      <Field\\n        name=\\\"myInput\\\"\\n        label=\\\"Example input\\\"\\n        getDisplayValue={getDisplayValue}\\n        getSubmitValue={getSubmitValue}\\n        component={Input}\\n      />\\n\\n      <button type=\\\"submit\\\">Submit</button>\\n      <button type=\\\"reset\\\">Reset</button>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, FieldGroup, Field, Input } from 'react-ocean-forms';\\n\\nfunction Example({ logMessage }) {\\n  // Submit callback, here you'd make your api calls\\n  const handleSubmit = (values) => {\\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\\n  };\\n\\n  // Notice how a field group creates a sub object\\n  const defaultValues = {\\n    myGroup: {\\n      myInput1: 'input 1',\\n      myInput2: 'input 2',\\n    }\\n  };\\n\\n  return (\\n    <Form\\n      className=\\\"demo\\\"\\n      onSubmit={handleSubmit}\\n      defaultValues={defaultValues}\\n    >\\n      <FieldGroup\\n        name=\\\"myGroup\\\"\\n        label=\\\"Example group\\\"\\n        render={() => {\\n          return (\\n            <React.Fragment>\\n              <Field name=\\\"myInput1\\\" label=\\\"Example input\\\" component={Input} />\\n              <Field name=\\\"myInput2\\\" label=\\\"Example input 2\\\" component={Input} />\\n            </React.Fragment>\\n          );\\n        }}\\n      />\\n      <button type=\\\"submit\\\">Submit</button>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, FieldGroup, Field, Input } from 'react-ocean-forms';\\n\\n/** Reusable contact person fields */\\nfunction ContactFields() {\\n  return (\\n    <React.Fragment>\\n      <Field name=\\\"first\\\" label=\\\"First name\\\" component={Input} />\\n      <Field name=\\\"last\\\" label=\\\"Last name\\\" component={Input} />\\n    </React.Fragment>\\n  );\\n}\\n\\nfunction Example({ logMessage }) {\\n  const handleSubmit = (values) => {\\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\\n  };\\n\\n  return (\\n    <Form className=\\\"demo\\\" onSubmit={handleSubmit}>\\n      <FieldGroup\\n        name=\\\"mainContact\\\"\\n        label=\\\"Main contact\\\"\\n        render={() => {\\n          return (\\n            <React.Fragment>\\n              <strong>Main contact</strong>\\n              <ContactFields />\\n            </React.Fragment>\\n          );\\n        }}\\n      />\\n\\n      <FieldGroup\\n        name=\\\"technicalContact\\\"\\n        label=\\\"Technical contact\\\"\\n        render={() => {\\n          return (\\n            <React.Fragment>\\n              <strong>Technical contact</strong>\\n              <ContactFields />\\n            </React.Fragment>\\n          );\\n        }}\\n      />\\n      <button type=\\\"submit\\\">Submit</button>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input, ValidationSummary, validators } from 'react-ocean-forms';\\n\\nfunction Example({ logMessage }) {\\n  return (\\n    <Form className=\\\"demo\\\">\\n      <ValidationSummary id=\\\"summary\\\" />\\n\\n      <Field\\n        name=\\\"input1\\\"\\n        label=\\\"Example input 1\\\"\\n        component={Input}\\n        validators={[validators.required]}\\n      />\\n\\n      <Field\\n        name=\\\"input2\\\"\\n        label=\\\"Example input 2\\\"\\n        component={Input}\\n        validators={[validators.required]}\\n      />\\n\\n      <button type=\\\"submit\\\">Submit</button>\\n      <button type=\\\"reset\\\">Reset</button>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input } from 'react-ocean-forms';\\n\\nfunction Example({ logMessage }) {\\n  // onChange callback\\n  const handleChange = (value) => {\\n    logMessage('onChange, value: ' + JSON.stringify(value));\\n  };\\n\\n  // onBlur callback\\n  const handleBlur = () => {\\n    logMessage('onBlur');\\n  };\\n\\n  return (\\n    <Form className=\\\"demo\\\">\\n      <Field\\n        name=\\\"myInput\\\"\\n        label=\\\"Number input\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={Input}\\n        type=\\\"number\\\"\\n      />\\n\\n      <Field\\n        name=\\\"myInput2\\\"\\n        label=\\\"Date input\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={Input}\\n        type=\\\"date\\\"\\n      />\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field } from 'react-ocean-forms';\\n\\n/**\\n * Simple implementation of a custom input\\n */\\nfunction CustomInput(props) {\\n  const {\\n    field,\\n    label,\\n    type,\\n    meta,\\n    customProp,\\n  } = props;\\n\\n\\n  return (\\n    <div>\\n      <div>\\n        <label htmlFor={field.id}>\\n          <strong>{meta.stringFormatter(label)}</strong>\\n        </label>\\n      </div>\\n      <input type={type} {...field} />\\n      {customProp}\\n    </div>\\n  );\\n}\\n\\nfunction Example({ logMessage }) {\\n  // Submit callback, here you'd make your api calls\\n  const handleSubmit = (values) => {\\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\\n  };\\n\\n  // onChange callback\\n  const handleChange = (value) => {\\n    logMessage('onChange, value: ' + JSON.stringify(value));\\n  };\\n\\n  // onBlur callback\\n  const handleBlur = () => {\\n    logMessage('onBlur');\\n  };\\n\\n  return (\\n    <Form className=\\\"demo\\\" onSubmit={handleSubmit}>\\n      <Field\\n        name=\\\"myCustomInput\\\"\\n        label=\\\"Input with info text\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={CustomInput}\\n        customProp=\\\"custom text\\\"\\n      />\\n\\n      <button type=\\\"submit\\\">Submit</button>\\n      <button type=\\\"reset\\\">Reset</button>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input, FormButton } from 'react-ocean-forms';\\n\\nfunction asyncValidator(value) {\\n  return new Promise(function(resolve) {\\n    setTimeout(() => {\\n      if (value === '') {\\n        resolve('Invalid input');\\n      } else {\\n        resolve();\\n      }\\n    }, 1000);\\n  });\\n}\\n\\nfunction Example({ logMessage }) {\\n  return (\\n    <Form className=\\\"demo\\\">\\n      <Field\\n        name=\\\"input\\\"\\n        label=\\\"Sample input\\\"\\n        component={Input}\\n        asyncValidators={[asyncValidator]}\\n      />\\n\\n      <FormButton type=\\\"submit\\\">Submit</FormButton>\\n      <FormButton type=\\\"reset\\\">Reset</FormButton>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input, FormButton } from 'react-ocean-forms';\\n\\nfunction Example() {\\n  return (\\n    <Form className=\\\"demo\\\" disabled>\\n      <Field\\n        name=\\\"input\\\"\\n        label=\\\"Sample input\\\"\\n        component={Input}\\n      />\\n\\n      <FormButton type=\\\"submit\\\">Submit</FormButton>\\n      <FormButton type=\\\"reset\\\">Reset</FormButton>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, Input, FormButton } from 'react-ocean-forms';\\n\\nfunction Example({ logMessage }) {\\n  const handleSubmit = (values, submitArgs) => {\\n    logMessage(\\n      'onSubmit, values: ' + JSON.stringify(values) +\\n      ', submitArgs: ' + JSON.stringify(submitArgs)\\n    );\\n  };\\n\\n  return (\\n    <Form className=\\\"demo\\\" onSubmit={handleSubmit}>\\n      <Field\\n        name=\\\"input\\\"\\n        label=\\\"Sample input\\\"\\n        component={Input}\\n      />\\n\\n      <FormButton type=\\\"submit\\\" submitArgs={{ foo: 'bar' }}>Submit</FormButton>\\n      <FormButton type=\\\"reset\\\">Reset</FormButton>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, FormText } from 'react-ocean-forms';\\n\\nfunction Example() {\\n  return (\\n    <Form>\\n      <p>\\n        <FormText\\n          text=\\\"Demo output\\\"\\n        />\\n      </p>\\n\\n      <p>\\n        <FormText\\n          text=\\\"Output with parameters: {param}\\\"\\n          values={{ param: 'Demo value' }}\\n        />\\n      </p>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, validators } from 'react-ocean-forms';\\nimport { Input } from 'react-ocean-forms-bootstrap';\\n\\nfunction Example({ logMessage }) {\\n  // onChange callback\\n  const handleChange = (value) => {\\n    logMessage('onChange, value: ' + JSON.stringify(value));\\n  };\\n\\n  // onBlur callback\\n  const handleBlur = () => {\\n    logMessage('onBlur');\\n  };\\n\\n  return (\\n    <Form className=\\\"demo\\\">\\n      <Field\\n        name=\\\"myInput\\\"\\n        label=\\\"Normal input\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={Input}\\n      />\\n\\n      <Field\\n        name=\\\"requiredInput\\\"\\n        label=\\\"Required input\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={Input}\\n        validators={[validators.required]}\\n      />\\n\\n      <Field\\n        name=\\\"infoInput\\\"\\n        label=\\\"Info input\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={Input}\\n        info=\\\"Custom info text!\\\"\\n      />\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, validators } from 'react-ocean-forms';\\nimport { Input } from 'react-ocean-forms-bootstrap';\\n\\nfunction Example() {\\n  return (\\n    <Form className=\\\"demo\\\" plaintext>\\n      <Field\\n        name=\\\"myInput\\\"\\n        label=\\\"Normal input\\\"\\n        component={Input}\\n      />\\n\\n      <Field\\n        name=\\\"requiredInput\\\"\\n        label=\\\"Required input\\\"\\n        component={Input}\\n        validators={[validators.required]}\\n      />\\n\\n      <Field\\n        name=\\\"infoInput\\\"\\n        label=\\\"Info input\\\"\\n        component={Input}\\n        info=\\\"Custom info text!\\\"\\n      />\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field } from 'react-ocean-forms';\\nimport { Input } from 'react-ocean-forms-bootstrap';\\nimport { Button } from 'reactstrap';\\n\\nfunction Example() {\\n  return (\\n    <Form className=\\\"demo\\\">\\n      <Field\\n        name=\\\"prefixInput\\\"\\n        label=\\\"With Prefix\\\"\\n        component={Input}\\n        prefix=\\\"Prefix text\\\"\\n      />\\n\\n      <Field\\n        name=\\\"customPrefixInput\\\"\\n        label=\\\"Custom prefix\\\"\\n        component={Input}\\n        prefix={<Button>Prefix</Button>}\\n      />\\n\\n      <Field\\n        name=\\\"suffixInput\\\"\\n        label=\\\"With Suffix\\\"\\n        component={Input}\\n        suffix=\\\"Suffix text\\\"\\n      />\\n\\n      <Field\\n        name=\\\"customSuffixInput\\\"\\n        label=\\\"Custom Suffix\\\"\\n        component={Input}\\n        suffix={<Button>Suffix</Button>}\\n      />\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, validators } from 'react-ocean-forms';\\nimport { Select } from 'react-ocean-forms-bootstrap';\\n\\nfunction Example({ logMessage }) {\\n  // onChange callback\\n  const handleChange = (value) => {\\n    logMessage('onChange, value: ' + JSON.stringify(value));\\n  };\\n\\n  // onBlur callback\\n  const handleBlur = () => {\\n    logMessage('onBlur');\\n  };\\n\\n  const options = [\\n    { label: 'Option 1', value: \\\"1\\\" },\\n    { label: 'Option 2', value: \\\"2\\\" },\\n  ];\\n\\n  return (\\n    <Form className=\\\"demo\\\">\\n      <Field\\n        name=\\\"myInput\\\"\\n        label=\\\"Normal input\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={Select}\\n        options={options}\\n      />\\n\\n      <Field\\n        name=\\\"requiredInput\\\"\\n        label=\\\"Required input\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={Select}\\n        validators={[validators.required]}\\n        options={options}\\n      />\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field } from 'react-ocean-forms';\\nimport { Check } from 'react-ocean-forms-bootstrap';\\n\\nfunction Example({ logMessage }) {\\n  // onChange callback\\n  const handleChange = (value) => {\\n    logMessage('onChange, value: ' + JSON.stringify(value));\\n  };\\n\\n  // onBlur callback\\n  const handleBlur = () => {\\n    logMessage('onBlur');\\n  };\\n\\n  return (\\n    <Form className=\\\"demo\\\">\\n      <Field\\n        name=\\\"check\\\"\\n        label=\\\"Sample checkbox\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={Check}\\n      />\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field } from 'react-ocean-forms';\\nimport { DatePicker } from 'react-ocean-forms-bootstrap';\\n\\nfunction Example({ logMessage }) {\\n  // onChange callback\\n  const handleChange = (value) => {\\n    logMessage('onChange, value: ' + JSON.stringify(value));\\n  };\\n\\n  // onBlur callback\\n  const handleBlur = () => {\\n    logMessage('onBlur');\\n  };\\n\\n  return (\\n    <Form className=\\\"demo\\\">\\n      <Field\\n        name=\\\"datePicker\\\"\\n        label=\\\"Sample date picker\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={DatePicker}\\n        dateFormat=\\\"DD.MM.YYYY\\\"\\n      />\\n\\n      <Field\\n        name=\\\"timePicker\\\"\\n        label=\\\"Sample time picker\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={DatePicker}\\n        timeFormat=\\\"HH:mm\\\"\\n      />\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field, validators } from 'react-ocean-forms';\\nimport { Input, ValidationSummary } from 'react-ocean-forms-bootstrap';\\n\\nfunction Example() {\\n  return (\\n    <Form className=\\\"demo\\\">\\n      <ValidationSummary id=\\\"demoSummary\\\" />\\n\\n      <Field\\n        name=\\\"requiredInput\\\"\\n        label=\\\"Required input\\\"\\n        component={Input}\\n        validators={[validators.required]}\\n      />\\n\\n      <button type=\\\"submit\\\">Submit</button>\\n      <button type=\\\"reset\\\">Reset</button>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field } from 'react-ocean-forms';\\nimport { Input, FormButton } from 'react-ocean-forms-bootstrap';\\n\\nfunction asyncValidator(value) {\\n  return new Promise(function(resolve) {\\n    setTimeout(() => {\\n      if (value === '') {\\n        resolve('Invalid input');\\n      } else {\\n        resolve();\\n      }\\n    }, 1000);\\n  });\\n}\\n\\nfunction Example({ logMessage }) {\\n  return (\\n    <Form className=\\\"demo\\\">\\n      <Field\\n        name=\\\"input\\\"\\n        label=\\\"Sample input\\\"\\n        component={Input}\\n        asyncValidators={[asyncValidator]}\\n      />\\n\\n      <FormButton type=\\\"submit\\\" color=\\\"primary\\\">Submit</FormButton>\\n      <FormButton type=\\\"reset\\\">Reset</FormButton>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field } from 'react-ocean-forms';\\nimport { Input, FormButton } from 'react-ocean-forms-bootstrap';\\n\\nfunction Example() {\\n  return (\\n    <Form className=\\\"demo\\\" disabled>\\n      <Field\\n        name=\\\"input\\\"\\n        label=\\\"Sample input\\\"\\n        component={Input}\\n      />\\n\\n      <FormButton type=\\\"submit\\\" color=\\\"primary\\\">Submit</FormButton>\\n      <FormButton type=\\\"reset\\\">Reset</FormButton>\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { Form, Field } from 'react-ocean-forms';\\nimport { OnOffToggleButton } from 'react-ocean-forms-bootstrap';\\n\\nfunction Example({ logMessage }) {\\n  // onChange callback\\n  const handleChange = (value) => {\\n    logMessage('onChange, value: ' + JSON.stringify(value));\\n  };\\n\\n  // onBlur callback\\n  const handleBlur = () => {\\n    logMessage('onBlur');\\n  };\\n\\n  return (\\n    <Form className=\\\"demo\\\">\\n      <Field\\n        name=\\\"check\\\"\\n        label=\\\"Sample toggle\\\"\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        component={OnOffToggleButton}\\n      />\\n    </Form>\\n  );\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import React from 'react';\\nimport { IntlProvider, FormattedMessage, addLocaleData } from 'react-intl';\\nimport deLocaleData from 'react-intl/locale-data/de';\\nimport IntlFrom from 'react-ocean-forms-react-intl';\\nimport { Button } from 'reactstrap';\\nimport { Field, validators, FormText } from 'react-ocean-forms';\\nimport { Input, FormButton } from 'react-ocean-forms-bootstrap';\\n\\nclass Example extends React.Component {\\n  state = { locale: 'en' };\\n  messages = {\\n    en: {\\n      lblName: 'First name',\\n      lblMail: 'E-Mail',\\n      submit: 'Submit',\\n      reset: 'Reset',\\n      customText: 'My example text',\\n      ojs_field_required: 'This field is required!',\\n      ojs_error_required: 'This field is required!',\\n    },\\n    de: {\\n      lblName: 'Vorname',\\n      lblMail: 'E-Mail',\\n      submit: 'Senden',\\n      reset: 'Zurücksetzen',\\n      customText: 'Mein Beispieltext',\\n      ojs_field_required: 'Pflichtfeld!',\\n      ojs_error_required: 'Dieses Feld muss ausgefüllt werden!',\\n    },\\n  };\\n\\n  render() {\\n    const { locale } = this.state;\\n\\n    addLocaleData(deLocaleData);\\n\\n    return (\\n      <IntlProvider locale={locale} messages={this.messages[locale]}>\\n        <IntlFrom className=\\\"demo\\\">\\n          <p>\\n            <Button\\n              className=\\\"mr-2\\\"\\n              onClick={() => this.setState({ locale: 'en' })}\\n            >\\n              English\\n            </Button>\\n            <Button\\n              className=\\\"mr-2\\\"\\n              onClick={() => this.setState({ locale: 'de' })}\\n            >\\n              German\\n            </Button>\\n          </p>\\n\\n          <Field\\n            name=\\\"name\\\"\\n            label=\\\"lblName\\\"\\n            component={Input}\\n            validators={[validators.required]}\\n          />\\n          <Field\\n            name=\\\"mail\\\"\\n            label=\\\"lblMail\\\"\\n            component={Input}\\n          />\\n\\n          <p>\\n            <FormText text=\\\"customText\\\" />\\n          </p>\\n\\n          <FormButton color=\\\"primary\\\">\\n            <FormattedMessage id=\\\"submit\\\" />\\n          </FormButton>\\n          <FormButton type=\\\"reset\\\">\\n            <FormattedMessage id=\\\"reset\\\" />\\n          </FormButton>\\n        </IntlFrom>\\n      </IntlProvider>\\n    );\\n  }\\n}\\n\\nexport default Example;\\n\"","module.exports = \"import { Form } from 'react-ocean-forms';\\n\\n<Form\\n  onSubmit={this.handleSubmit}\\n  onReset={this.handleReset}\\n>\\n  ...\\n</Form>\\n\"","module.exports = \"{\\n  field1: 'foo',\\n  field2: 'bar',\\n  demoGroup: {\\n    field3: '42',\\n  },\\n}\\n\"","module.exports = \"import { Field, Input } from 'react-ocean-forms';\\n\\n<Field\\n  name=\\\"demo\\\"\\n  label=\\\"lbl_demo\\\"\\n  component={Input}\\n/>\\n\"","module.exports = \"import { FieldGroup } from 'react-ocean-forms';\\n\\n<FieldGroup\\n  name=\\\"demo\\\"\\n  label=\\\"demo group\\\"\\n  render={(groupInfo) => renderGroup(groupInfo)}\\n/>\\n\"","module.exports = \"import { ValidationSummary } from 'react-ocean-forms';\\n\\n<ValidationSummary id=\\\"main-summary\\\" />\\n\"","module.exports = \"import { Field, Input } from 'react-ocean-forms';\\n\\n<Field\\n  name=\\\"demo\\\"\\n  label=\\\"lbl_demo\\\"\\n  component={Input}\\n/>\\n\"","module.exports = \"import React from 'react';\\nimport { fieldMetaShape, fieldShape } from 'react-ocean-forms';\\n\\nfunction CustomInput(props) {\\n  const { field, meta } = props;\\n\\n  // Optional implementation of the plaintext feature\\n  if (meta.plaintext) {\\n    return field.value;\\n  }\\n\\n  return (\\n    <input type=\\\"text\\\" {...field} />\\n  );\\n}\\n\\nexport default CustomInput;\\n\"","module.exports = \"import { Field } from 'react-ocean-forms';\\nimport CustomInput from './CustomInput';\\n\\n<Field\\n  id=\\\"my-field\\\"\\n  label=\\\"My custom field\\\"\\n  component={CustomInput}\\n/>\\n\"","module.exports = \"import { FormButton } from 'react-ocean-forms';\\n\\n<FormButton>Submit</FormButton>\\n\"","module.exports = \"import { FormText } from 'react-ocean-forms';\\n\\n<FormText text=\\\"demoText\\\" />\\n\"","module.exports = \"import { Field, Input, validators } from 'react-ocean-forms';\\n\\n<Field\\n  name=\\\"demo\\\"\\n  label=\\\"lbl_demo\\\"\\n  component={Input}\\n  validators={[validators.required]}\\n/>\\n\"","module.exports = \"import { Field, Input, validators } from 'react-ocean-forms';\\n\\n<Field\\n  name=\\\"demo\\\"\\n  label=\\\"lbl_demo\\\"\\n  component={Input}\\n  validators={[validators.withParam(validators.minLength, 5)]}\\n/>\\n\"","module.exports = \"const errorObj = {\\n  message_id: 'error-id',\\n  params: {\\n    customParam: 'Foobar',\\n  },\\n}\\n\"","module.exports = \"// Error message\\n\\\"Field is invalid {customParam}\\\"\\n// Renders to\\n\\\"Field is invalid Foobar\\\"\\n\"","module.exports = \"import { Field, Input } from 'react-ocean-forms';\\n\\nconst myValidator = (value) => {\\n  return value === 'OK' ? undefined : 'Value is not OK!';\\n};\\n\\n<Field\\n  name=\\\"demo\\\"\\n  label=\\\"lbl_demo\\\"\\n  component={Input}\\n  validators={[myValidator]}\\n/>\\n\"","module.exports = \"import { Field, Input } from 'react-ocean-forms';\\nimport { CustomApi } from './myCustomApi';\\n\\nconst myValidator = async (value) => {\\n  const result = await CustomApi.validateAtBackend(value);\\n  if (result.valid === true) {\\n    return undefined;\\n  }\\n\\n  return 'Invalid value';\\n};\\n\\n<Field\\n  name=\\\"demo\\\"\\n  label=\\\"lbl_demo\\\"\\n  component={Input}\\n  asyncValidators={[myValidator]}\\n/>\\n\"","module.exports = \"import { Form, Field, Input } from 'react-ocean-forms';\\n\\nconst myValidator = (values) => {\\n  if (values.first === 'John' && values.last === 'Doe') {\\n    return {\\n      // This will mark both fields as invalid with\\n      // the given error messages.\\n      first: 'Invalid name!',\\n      last: 'Invalid name!',\\n    };\\n  }\\n\\n  return null;\\n};\\n\\n<Form onValidate={myValidator}>\\n  <Field name=\\\"first\\\" label=\\\"First name\\\" component={Input} />\\n  <Field name=\\\"last\\\" label=\\\"Last name\\\" component={Input} />\\n</Form>\\n\"","module.exports = \"import { Field } from 'react-ocean-forms';\\nimport { Input } from 'react-ocean-forms-bootstrap';\\n\\n<Field\\n  name=\\\"demo\\\"\\n  label=\\\"lbl_demo\\\"\\n  component={Input}\\n/>\\n\"","module.exports = \"import { Field } from 'react-ocean-forms';\\nimport { Select } from 'react-ocean-forms-bootstrap';\\n\\nconst options = [\\n  { label: 'Option 1', value: 1 },\\n  { label: 'Option 2', value: 2 },\\n];\\n\\n<Field\\n  name=\\\"demo\\\"\\n  label=\\\"lbl_demo\\\"\\n  component={Select}\\n  options={options}\\n/>\\n\"","module.exports = \"import { Field } from 'react-ocean-forms';\\nimport { Check } from 'react-ocean-forms-bootstrap';\\n\\n<Field\\n  name=\\\"demo\\\"\\n  label=\\\"lbl_demo\\\"\\n  component={Check}\\n/>\\n\"","module.exports = \"import { Field } from 'react-ocean-forms';\\nimport { DatePicker } from 'react-ocean-forms-bootstrap';\\n\\n<Field\\n  name=\\\"demo\\\"\\n  label=\\\"lbl_demo\\\"\\n  component={DatePicker}\\n/>\\n\"","module.exports = \"import { ValidationSummary } from 'react-ocean-forms-bootstrap';\\n\\n<ValidationSummary id=\\\"main-summary\\\" />\\n\"","module.exports = \"import { Form } from 'react-ocean-forms';\\nimport { FormButton } from 'react-ocean-forms-bootstrap';\\n\\n<Form>\\n  <FormButton>Click me!</FormButton>\\n</Form>\\n\"","module.exports = \"import { Field } from 'react-ocean-forms';\\nimport { OnOffToggleButton } from 'react-ocean-forms-bootstrap';\\n\\n<Field\\n  name=\\\"demo\\\"\\n  label=\\\"lbl_demo\\\"\\n  component={OnOffToggleButton}\\n/>\\n\"","module.exports = \"import IntlForm from 'react-ocean-forms-react-intl';\\n\\n<IntlForm>\\n  ...\\n</IntlForm>\\n\"","import React from 'react';\nimport { Jumbotron } from 'reactstrap';\nimport PrismCode from 'react-prism';\nimport { Link } from 'react-router-dom';\n\nconst GettingStartedExample = require('!!raw-loader!./examples/GettingStarted.js'); // eslint-disable-line\n\nfunction Home() {\n  return (\n    <div className=\"page\">\n      <Jumbotron>\n        <h1 className=\"display-4\">react-ocean-forms</h1>\n        <p className=\"lead\">Flexible and lightweight framework for rendering and validating forms with React.</p>\n        <hr />\n        <p>\n          <a href=\"https://www.npmjs.com/package/react-ocean-forms\"><img src=\"https://img.shields.io/npm/v/react-ocean-forms.svg\" alt=\"Npm version\" /></a>\n          {' '}\n          <a href=\"https://github.com/environment-agency-austria/react-ocean-forms/blob/master/LICENSE\"><img src=\"https://img.shields.io/github/license/environment-agency-austria/react-ocean-forms.svg\" alt=\"License\" /></a>\n        </p>\n      </Jumbotron>\n\n      <h2>Installation</h2>\n\n      <p>with npm:</p>\n      <PrismCode className=\"lang-bash\" component=\"pre\">\n        npm install --save-dev react-ocean-forms\n      </PrismCode>\n\n      <p>or with yarn:</p>\n      <PrismCode className=\"lang-bash\" component=\"pre\">\n        yarn add --dev react-ocean-forms\n      </PrismCode>\n\n      <h4 className=\"mt-4\">Optional packages</h4>\n      <p>\n        The <a href=\"https://github.com/environment-agency-austria/react-ocean-forms\">react-ocean-forms</a> package\n        is the core package. While you can use it on it's own, we highly recommend adding\n        the <a href=\"https://github.com/environment-agency-austria/react-ocean-forms-bootstrap\">react-ocean-forms-bootstrap</a> package\n        as well. It offers you easy bootstrap (reactstrap) integration.\n      </p>\n      <p>\n        If you're using react-intl in your project, add\n        the <a href=\"https://github.com/environment-agency-austria/react-ocean-forms-react-intl\">react-ocean-forms-react-intl</a> package\n        for react-intl support.\n      </p>\n\n      <h2 className=\"mt-4\">Getting started</h2>\n      <p>\n        Assuming that you already have an up and running React app, otherwise please follow\n        the <a href=\"https://github.com/facebook/create-react-app#creating-an-app\">create-react-app</a> guideline.\n      </p>\n      <p>\n        After adding the react-ocean-forms package(s) to your project, you can simply import the components you need.\n      </p>\n      <PrismCode className=\"lang-jsx\" component=\"pre\">{GettingStartedExample}</PrismCode>\n      <p>For further documentation head to the <Link to=\"/components\">components</Link> section.</p>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction ComponentPage(props) {\n  const {\n    title,\n    description,\n    children,\n    parent,\n    ...rest\n  } = props;\n\n  let parentLabel = null;\n  switch (parent) {\n    case \"core\":\n      parentLabel = \"react-ocean-forms\";\n      break;\n\n    case \"bootstrap\":\n      parentLabel = \"react-ocean-forms-bootstrap\";\n      break;\n\n    case \"intl\":\n      parentLabel = \"react-ocean-forms-react-intl\";\n      break;\n\n    default:\n      break;\n  }\n\n  const apiLink = title.replace(/(?!^)[A-Z]/g, (match) => `-${match}`).toLowerCase();\n\n  return (\n    <div className=\"component-page\" {...rest}>\n      <Breadcrumb>\n        <BreadcrumbItem>Components</BreadcrumbItem>\n        <BreadcrumbItem>{parentLabel}</BreadcrumbItem>\n        <BreadcrumbItem tag=\"strong\">{title}</BreadcrumbItem>\n      </Breadcrumb>\n\n      <h1>\n        {title}\n        {' '}<Link to={`/api/${parent}/${apiLink}`}>(go to API documentation)</Link>\n      </h1>\n      <p>{description}</p>\n      {children}\n    </div>\n  );\n}\n\nexport default ComponentPage;\n","import React from 'react';\nimport PrismCode from 'react-prism';\nimport { Button } from 'reactstrap';\n\nclass Showcase extends React.Component {\n  state = {\n    messageLog: [],\n    showCode: false,\n  }\n\n  logMessage = (msg) => {\n    this.setState(prevState => {\n      const { messageLog } = prevState;\n\n      if (messageLog.length > 9) {\n        messageLog.splice(9, 1);\n      }\n\n      const newLog = [\n        ...[msg],\n        ...messageLog,\n      ];\n\n      return { messageLog: newLog };\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      component: Component,\n      code,\n    } = this.props;\n\n    const { messageLog, showCode } = this.state;\n\n    return (\n      <div className=\"showcase\">\n        <h5 id={title}>{title}</h5>\n        <p className=\"description\">{description}</p>\n        <div className=\"display\">\n          <Component logMessage={this.logMessage} />\n        </div>\n        {messageLog.length > 0 &&\n          <div className=\"message-log\">\n            <h6>Message log</h6>\n            <pre>{messageLog.join('\\n')}</pre>\n          </div>\n        }\n        <div className=\"source\">\n          {showCode ? (\n            <React.Fragment>\n              <h6><Button color=\"link\" onClick={() => this.setState({ showCode: false })}>Hide sourcecode</Button></h6>\n              <PrismCode className=\"lang-jsx\" component=\"pre\">{code}</PrismCode>\n            </React.Fragment>\n          ) :\n            <h6 className=\"mb-0\">\n              <Button\n                color=\"link\"\n                onClick={() => this.setState({ showCode: true })}\n              >\n                Show sourcecode\n              </Button>\n            </h6>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Showcase;\n","import React from 'react';\nimport { Form, Field, Input } from 'react-ocean-forms';\n\nfunction Example({ logMessage }) {\n  // Submit callback, here you'd make your api calls\n  const handleSubmit = (values) => {\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\n  };\n\n  // Reset callback, can be useful in some cases for cleanup\n  const handleReset = () => {\n    logMessage('onReset');\n  };\n\n  return (\n    <Form\n      className=\"demo\"\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n    >\n      <Field name=\"myInput\" label=\"Example input\" component={Input} />\n      <button type=\"submit\">Submit</button>\n      <button type=\"reset\">Reset</button>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, Field, Input } from 'react-ocean-forms';\n\nclass Example extends React.Component {\n  state = {\n    defaultValues: {\n      myInput: 'default value',\n    },\n  };\n\n  // Submit callback, here you'd make your api calls\n  handleSubmit = (values) => {\n    const { logMessage } = this.props;\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\n  };\n\n  randomizeDefaultValues = () => {\n    this.setState({\n      defaultValues: {\n        myInput: `default ${(Math.floor(Math.random() * 100))}`,\n      },\n    });\n  }\n\n  render() {\n    const { defaultValues } = this.state;\n\n    return (\n      <Form\n        className=\"demo\"\n        onSubmit={this.handleSubmit}\n        defaultValues={defaultValues}\n      >\n        <Field name=\"myInput\" label=\"Example input\" component={Input} />\n\n        <p className=\"mt-4\">\n          Current default value: {defaultValues.myInput}\n        </p>\n\n        <button type=\"submit\">Submit</button>\n        <button type=\"reset\">Reset</button>\n        <button\n          type=\"button\"\n          onClick={this.randomizeDefaultValues}\n          className=\"ml-1\"\n        >\n          Update default values\n        </button>\n      </Form>\n    );\n  }\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, Field, Input } from 'react-ocean-forms';\n\nclass Example extends React.Component {\n  state = {\n    // Typically you'd load the values from your backend\n    values: {\n      myInput: 'demo value',\n    },\n  };\n\n  // Submit callback, here you'd make your api calls\n  handleSubmit = (values) => {\n    const { logMessage } = this.props;\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\n  };\n\n  randomizeValues = () => {\n    this.setState({\n      values: {\n        myInput: `demo ${(Math.floor(Math.random() * 100))}`,\n      },\n    });\n  }\n\n  render() {\n    const { values } = this.state;\n\n    return (\n      <Form\n        className=\"demo\"\n        onSubmit={this.handleSubmit}\n        values={values}\n      >\n        <Field name=\"myInput\" label=\"Example input\" component={Input} />\n\n        <button type=\"submit\">Submit</button>\n        <button type=\"reset\">Reset</button>\n        <button\n          type=\"button\"\n          onClick={this.randomizeValues}\n          className=\"ml-1\"\n        >\n          Update values\n        </button>\n      </Form>\n    );\n  }\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, Field, Input, ValidationSummary } from 'react-ocean-forms';\n\nfunction Example({ logMessage }) {\n  // Submit callback, here you'd make your api calls\n  const handleSubmit = (values) => {\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\n  };\n\n  // Reset callback, can be useful in some cases for cleanup\n  const handleReset = () => {\n    logMessage('onReset');\n  };\n\n  // Form wide validation function\n  const handleValidate = (values) => {\n    if (values.demoInput === 'bad') {\n      return {\n        demoInput: 'Invalid input!',\n      };\n    }\n\n    return null;\n  };\n\n  return (\n    <Form\n      className=\"demo\"\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n      onValidate={handleValidate}\n    >\n      <ValidationSummary id=\"summary\" />\n\n      <Field name=\"demoInput\" label=\"Example input\" component={Input} />\n\n      <button type=\"submit\">Submit</button>\n      <button type=\"reset\">Reset</button>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, Field, Input } from 'react-ocean-forms';\n\nfunction Example({ logMessage }) {\n  // Submit callback, here you'd make your api calls\n  const handleSubmit = (values) => {\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\n  };\n\n  return (\n    <Form\n      className=\"demo\"\n      onSubmit={handleSubmit}\n      disabled\n    >\n      <Field name=\"myInput\" label=\"Example input 1\" component={Input} />\n      <Field name=\"myInput2\" label=\"Example input 2\" component={Input} />\n      <button type=\"submit\">Submit</button>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, Field, Input } from 'react-ocean-forms';\n\nfunction Example({ logMessage }) {\n  const defaultValues = {\n    myInput: 'default value 1',\n    myInput2: 'default value 2',\n  };\n\n  return (\n    <Form\n      className=\"demo\"\n      defaultValues={defaultValues}\n      plaintext\n    >\n      <Field name=\"myInput\" label=\"Example input 1\" component={Input} />\n      <Field name=\"myInput2\" label=\"Example input 2\" component={Input} />\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport simpleFormDemo from './examples/SimpleForm';\nimport defaultValuesDemo from './examples/DefaultValues';\nimport valuesDemo from './examples/FormValues';\nimport formValidationDemo from './examples/FormValidation';\nimport disabledDemo from './examples/DisabledForm';\nimport plaintextDemo from './examples/PlaintextForm';\n\nconst defaultValues = require('!!raw-loader!./examples/DefaultValues.js'); // eslint-disable-line\nconst values = require('!!raw-loader!./examples/FormValues.js'); // eslint-disable-line\nconst simpleForm = require('!!raw-loader!./examples/SimpleForm.js'); // eslint-disable-line\nconst formValidation = require('!!raw-loader!./examples/FormValidation.js'); // eslint-disable-line\nconst disabled = require('!!raw-loader!./examples/DisabledForm.js'); // eslint-disable-line\nconst plaintext = require('!!raw-loader!./examples/PlaintextForm.js'); // eslint-disable-line\n\nfunction FormPage() {\n  return (\n    <ComponentPage\n      title=\"Form\"\n      description=\"The form is the main component. It glues together all the\n      Form logic through React's new Context api.\"\n      parent=\"core\"\n    >\n      <Showcase\n        title=\"Simple form\"\n        description=\"Showcase of a simple form\"\n        component={simpleFormDemo}\n        code={simpleForm}\n      />\n\n      <Showcase\n        title=\"Default values\"\n        description=\"Provide the form with default values that should be displayed on load.\n        Note how the default value won't update the Field, if the user changed the input.\n        However, on form reset the default value will be used again.\"\n        component={defaultValuesDemo}\n        code={defaultValues}\n      />\n\n      <Showcase\n        title=\"Values\"\n        description=\"Override the values of the form fields. Changing those values will override\n        the Field value, even if the user changed it.\"\n        component={valuesDemo}\n        code={values}\n      />\n\n      <Showcase\n        title=\"Disabled form\"\n        description=\"Setting the disabled prop will disable all form fields.\"\n        component={disabledDemo}\n        code={disabled}\n      />\n\n      <Showcase\n        title=\"Plaintext form\"\n        description=\"Setting the plaintext prop will show all form fields in a text-only mode.\"\n        component={plaintextDemo}\n        code={plaintext}\n      />\n\n      <Showcase\n        title=\"Form-wide validation\"\n        description=\"Use a form-wide validation function before submit. Notice that\n        the onSubmit callback is not invoked if you type 'bad' into the input.\"\n        component={formValidationDemo}\n        code={formValidation}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default FormPage;\n","import React from 'react';\nimport { Form, Field, Input } from 'react-ocean-forms';\n\nfunction Example({ logMessage }) {\n  // onChange callback\n  const handleChange = (value) => {\n    logMessage('onChange, value: ' + JSON.stringify(value));\n  };\n\n  // onBlur callback\n  const handleBlur = () => {\n    logMessage('onBlur');\n  };\n\n  return (\n    <Form className=\"demo\">\n      <Field\n        name=\"myInput\"\n        label=\"Example input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={Input}\n      />\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, Field, Input } from 'react-ocean-forms';\n\nfunction Example({ logMessage }) {\n  const getDisplayValue = (value, meta) => {\n    logMessage(\n      'getDisplayValue, value: ' + JSON.stringify(value) +\n      ', meta: ' + JSON.stringify(meta)\n    );\n\n    // This value will be used by the input when the field\n    // loads its value from the form defaults.\n    return 'display value: ' + value;\n  };\n\n  const getSubmitValue = (value, meta) => {\n    logMessage(\n      'getSubmitValue, value: ' + JSON.stringify(value) +\n      ', meta: ' + JSON.stringify(meta)\n    );\n\n    // This value will be used by the validators and by the\n    // form as the submitted value of the field.\n    return value.replace('display value:', 'submit value: ');\n  };\n\n  const handleSubmit = (values) => {\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\n  };\n\n  return (\n    <Form className=\"demo\" onSubmit={handleSubmit}>\n      <Field\n        name=\"myInput\"\n        label=\"Example input\"\n        getDisplayValue={getDisplayValue}\n        getSubmitValue={getSubmitValue}\n        component={Input}\n      />\n\n      <button type=\"submit\">Submit</button>\n      <button type=\"reset\">Reset</button>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport callbacksDemo from './examples/FieldCallbacks';\nimport lifecyclesDemo from './examples/FieldLifecycles';\n\nconst callbacks = require('!!raw-loader!./examples/FieldCallbacks.js'); // eslint-disable-line\nconst lifecycles = require('!!raw-loader!./examples/FieldLifecycles.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ComponentPage\n      title=\"Field\"\n      description=\"Defines a form field which will be managed by the Form.\"\n      parent=\"core\"\n    >\n      <Showcase\n        title=\"Field callbacks\"\n        description=\"Showcase of the field callbacks\"\n        component={callbacksDemo}\n        code={callbacks}\n      />\n\n      <Showcase\n        title=\"Value lifecycles\"\n        description=\"Showcase of the field lifecycle hooks\"\n        component={lifecyclesDemo}\n        code={lifecycles}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\nimport { Form, FieldGroup, Field, Input } from 'react-ocean-forms';\n\nfunction Example({ logMessage }) {\n  // Submit callback, here you'd make your api calls\n  const handleSubmit = (values) => {\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\n  };\n\n  // Notice how a field group creates a sub object\n  const defaultValues = {\n    myGroup: {\n      myInput1: 'input 1',\n      myInput2: 'input 2',\n    }\n  };\n\n  return (\n    <Form\n      className=\"demo\"\n      onSubmit={handleSubmit}\n      defaultValues={defaultValues}\n    >\n      <FieldGroup\n        name=\"myGroup\"\n        label=\"Example group\"\n        render={() => {\n          return (\n            <React.Fragment>\n              <Field name=\"myInput1\" label=\"Example input\" component={Input} />\n              <Field name=\"myInput2\" label=\"Example input 2\" component={Input} />\n            </React.Fragment>\n          );\n        }}\n      />\n      <button type=\"submit\">Submit</button>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, FieldGroup, Field, Input } from 'react-ocean-forms';\n\n/** Reusable contact person fields */\nfunction ContactFields() {\n  return (\n    <React.Fragment>\n      <Field name=\"first\" label=\"First name\" component={Input} />\n      <Field name=\"last\" label=\"Last name\" component={Input} />\n    </React.Fragment>\n  );\n}\n\nfunction Example({ logMessage }) {\n  const handleSubmit = (values) => {\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\n  };\n\n  return (\n    <Form className=\"demo\" onSubmit={handleSubmit}>\n      <FieldGroup\n        name=\"mainContact\"\n        label=\"Main contact\"\n        render={() => {\n          return (\n            <React.Fragment>\n              <strong>Main contact</strong>\n              <ContactFields />\n            </React.Fragment>\n          );\n        }}\n      />\n\n      <FieldGroup\n        name=\"technicalContact\"\n        label=\"Technical contact\"\n        render={() => {\n          return (\n            <React.Fragment>\n              <strong>Technical contact</strong>\n              <ContactFields />\n            </React.Fragment>\n          );\n        }}\n      />\n      <button type=\"submit\">Submit</button>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport simpleDemo from './examples/SimpleFieldGroup';\nimport reusableDemo from './examples/ReusableFieldGroup';\n\nconst simple = require('!!raw-loader!./examples/SimpleFieldGroup.js'); // eslint-disable-line\nconst reusable = require('!!raw-loader!./examples/ReusableFieldGroup.js'); // eslint-disable-line\n\nfunction FieldGroupPage() {\n  return (\n    <ComponentPage\n      title=\"FieldGroup\"\n      description=\"Defines a collection of fields. It will combine its values to a sub-object and provides the possibility to attach validators to the group.\"\n      parent=\"core\"\n    >\n      <Showcase\n        title=\"Simple field group\"\n        description=\"Showcase of a simple field group\"\n        component={simpleDemo}\n        code={simple}\n      />\n\n      <Showcase\n        title=\"Reuse form parts\"\n        description=\"A field group is a great way to reuse recurring fields.\"\n        component={reusableDemo}\n        code={reusable}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default FieldGroupPage;\n","import React from 'react';\nimport { Form, Field, Input, ValidationSummary, validators } from 'react-ocean-forms';\n\nfunction Example({ logMessage }) {\n  return (\n    <Form className=\"demo\">\n      <ValidationSummary id=\"summary\" />\n\n      <Field\n        name=\"input1\"\n        label=\"Example input 1\"\n        component={Input}\n        validators={[validators.required]}\n      />\n\n      <Field\n        name=\"input2\"\n        label=\"Example input 2\"\n        component={Input}\n        validators={[validators.required]}\n      />\n\n      <button type=\"submit\">Submit</button>\n      <button type=\"reset\">Reset</button>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport simpleDemo from './examples/SimpleValidationSummary';\n\nconst simple = require('!!raw-loader!./examples/SimpleValidationSummary.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ComponentPage\n      title=\"ValidationSummary\"\n      description=\"Displays a clickable list of errors from the current form. When an error is clicked, the corresponding input field is focused.\"\n      parent=\"core\"\n    >\n      <Showcase\n        title=\"Showcase\"\n        description=\"Showcase of the validation summary. Click on submit to display the summary.\"\n        component={simpleDemo}\n        code={simple}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\nimport { Form, Field, Input } from 'react-ocean-forms';\n\nfunction Example({ logMessage }) {\n  // onChange callback\n  const handleChange = (value) => {\n    logMessage('onChange, value: ' + JSON.stringify(value));\n  };\n\n  // onBlur callback\n  const handleBlur = () => {\n    logMessage('onBlur');\n  };\n\n  return (\n    <Form className=\"demo\">\n      <Field\n        name=\"myInput\"\n        label=\"Number input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={Input}\n        type=\"number\"\n      />\n\n      <Field\n        name=\"myInput2\"\n        label=\"Date input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={Input}\n        type=\"date\"\n      />\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, Field } from 'react-ocean-forms';\n\n/**\n * Simple implementation of a custom input\n */\nfunction CustomInput(props) {\n  const {\n    field,\n    label,\n    type,\n    meta,\n    customProp,\n  } = props;\n\n\n  return (\n    <div>\n      <div>\n        <label htmlFor={field.id}>\n          <strong>{meta.stringFormatter(label)}</strong>\n        </label>\n      </div>\n      <input type={type} {...field} />\n      {customProp}\n    </div>\n  );\n}\n\nfunction Example({ logMessage }) {\n  // Submit callback, here you'd make your api calls\n  const handleSubmit = (values) => {\n    logMessage('onSubmit, values: ' + JSON.stringify(values));\n  };\n\n  // onChange callback\n  const handleChange = (value) => {\n    logMessage('onChange, value: ' + JSON.stringify(value));\n  };\n\n  // onBlur callback\n  const handleBlur = () => {\n    logMessage('onBlur');\n  };\n\n  return (\n    <Form className=\"demo\" onSubmit={handleSubmit}>\n      <Field\n        name=\"myCustomInput\"\n        label=\"Input with info text\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={CustomInput}\n        customProp=\"custom text\"\n      />\n\n      <button type=\"submit\">Submit</button>\n      <button type=\"reset\">Reset</button>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport inputTypesDemo from './examples/InputTypes';\nimport customDemo from './examples/CustomInput';\n\nconst inputTypes = require('!!raw-loader!./examples/InputTypes.js'); // eslint-disable-line\nconst custom = require('!!raw-loader!./examples/CustomInput.js'); // eslint-disable-line\n\nfunction InputPage() {\n  return (\n    <ComponentPage\n      title=\"Input\"\n      description=\"Defines a form line containing a label and an input. Additionally it\n      can render an info button and info alert as well as validation messages. If the user\n      adds the required validator then it will mark the field as required as well.\"\n      parent=\"core\"\n    >\n      <Showcase\n        title=\"Input types\"\n        description=\"Showcase of the input type support\"\n        component={inputTypesDemo}\n        code={inputTypes}\n      />\n\n      <Showcase\n        title=\"Custom input\"\n        description=\"Creating your own input components is quite simple. Note that if you\n        want to use the flexible Intl support, you should put all your text outputs through\n        meta.stringFormatter.\"\n        component={customDemo}\n        code={custom}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default InputPage;\n","import React from 'react';\nimport { Form, Field, Input, FormButton } from 'react-ocean-forms';\n\nfunction asyncValidator(value) {\n  return new Promise(function(resolve) {\n    setTimeout(() => {\n      if (value === '') {\n        resolve('Invalid input');\n      } else {\n        resolve();\n      }\n    }, 1000);\n  });\n}\n\nfunction Example({ logMessage }) {\n  return (\n    <Form className=\"demo\">\n      <Field\n        name=\"input\"\n        label=\"Sample input\"\n        component={Input}\n        asyncValidators={[asyncValidator]}\n      />\n\n      <FormButton type=\"submit\">Submit</FormButton>\n      <FormButton type=\"reset\">Reset</FormButton>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, Field, Input, FormButton } from 'react-ocean-forms';\n\nfunction Example() {\n  return (\n    <Form className=\"demo\" disabled>\n      <Field\n        name=\"input\"\n        label=\"Sample input\"\n        component={Input}\n      />\n\n      <FormButton type=\"submit\">Submit</FormButton>\n      <FormButton type=\"reset\">Reset</FormButton>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, Field, Input, FormButton } from 'react-ocean-forms';\n\nfunction Example({ logMessage }) {\n  const handleSubmit = (values, submitArgs) => {\n    logMessage(\n      'onSubmit, values: ' + JSON.stringify(values) +\n      ', submitArgs: ' + JSON.stringify(submitArgs)\n    );\n  };\n\n  return (\n    <Form className=\"demo\" onSubmit={handleSubmit}>\n      <Field\n        name=\"input\"\n        label=\"Sample input\"\n        component={Input}\n      />\n\n      <FormButton type=\"submit\" submitArgs={{ foo: 'bar' }}>Submit</FormButton>\n      <FormButton type=\"reset\">Reset</FormButton>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport simpleFormButtonDemo from './examples/SimpleFormButton';\nimport disabledFormButtonDemo from './examples/DisabledFormButton';\nimport submitArgsDemo from './examples/FormButtonSubmitArgs';\n\nconst simpleFormButton = require('!!raw-loader!./examples/SimpleFormButton.js'); // eslint-disable-line\nconst disabledFormButton = require('!!raw-loader!./examples/DisabledFormButton.js'); // eslint-disable-line\nconst submitArgs = require('!!raw-loader!./examples/FormButtonSubmitArgs.js'); // eslint-disable-line\n\nfunction InputPage() {\n  return (\n    <ComponentPage\n      title=\"FormButton\"\n      description=\"Defines a button that integrates into the form context. It will\n      be disabled when the form is busy or disabled. You can also pass submitArgs to\n      the onSubmit handler this way.\"\n      parent=\"core\"\n    >\n      <Showcase\n        title=\"FormButton\"\n        description=\"Showcase of the form button\"\n        component={simpleFormButtonDemo}\n        code={simpleFormButton}\n      />\n\n      <Showcase\n        title=\"Submit args\"\n        description=\"Arguments to the form.onSubmit handler can be passed this way\"\n        component={submitArgsDemo}\n        code={submitArgs}\n      />\n\n      <Showcase\n        title=\"Disabled form\"\n        description=\"FormButtons are disabled if the form is disabled too\"\n        component={disabledFormButtonDemo}\n        code={disabledFormButton}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default InputPage;\n","import React from 'react';\nimport { Form, FormText } from 'react-ocean-forms';\n\nfunction Example() {\n  return (\n    <Form>\n      <p>\n        <FormText\n          text=\"Demo output\"\n        />\n      </p>\n\n      <p>\n        <FormText\n          text=\"Output with parameters: {param}\"\n          values={{ param: 'Demo value' }}\n        />\n      </p>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport simpleDemo from './examples/SimpleFormText';\n\nconst simple = require('!!raw-loader!./examples/SimpleFormText.js'); // eslint-disable-line\n\nfunction FormTextPage() {\n  return (\n    <ComponentPage\n      title=\"FormText\"\n      description=\"Wrapper for text output. It will use the Form.stringFormatter function\n      to output the message passed through the props. Best practice for custom input component\n      development is to pass every text output through the stringFormatter. This enables the\n      user of the form to add the react-ocean-forms-react-intl package and get i18n support\n      out of the box.\"\n      parent=\"core\"\n    >\n      <Showcase\n        title=\"FormText\"\n        description=\"Showcase of the form text\"\n        component={simpleDemo}\n        code={simple}\n      />\n\n      <h2>Usage with i18n</h2>\n      <p>\n        The <mark>FormText</mark> component is best used in an internationalization context.\n        The showcase page of <Link to=\"../intl/intl-form\">IntlForm</Link> contains a <mark>FormText</mark> component\n        as well.\n      </p>\n    </ComponentPage>\n  );\n}\n\nexport default FormTextPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction NotFound() {\n  return (\n    <React.Fragment>\n      <h1>404 - Not Found</h1>\n      <p>The page you've requested could not be found.</p>\n      <Link to=\"/\">Go to homepage</Link>\n    </React.Fragment>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport FormPage from './FormPage';\nimport FieldPage from './FieldPage';\nimport FieldGroupPage from './FieldGroupPage';\nimport ValidationSummaryPage from './ValidationSummaryPage';\nimport InputPage from './InputPage';\nimport FormButtonPage from './FormButtonPage';\nimport FormTextPage from './FormTextPage';\nimport NotFound from '../../not-found';\n\nfunction Core() {\n  return (\n    <Switch>\n      <Route path=\"/components/core/form/\" component={FormPage} />\n      <Route path=\"/components/core/field/\" component={FieldPage} />\n      <Route path=\"/components/core/field-group/\" component={FieldGroupPage} />\n      <Route path=\"/components/core/validation-summary/\" component={ValidationSummaryPage} />\n      <Route path=\"/components/core/input/\" component={InputPage} />\n      <Route path=\"/components/core/form-button/\" component={FormButtonPage} />\n      <Route path=\"/components/core/form-text/\" component={FormTextPage} />\n      <Redirect from=\"/components/core\" to=\"/components/core/form\" exact />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  );\n}\n\nexport default Core;\n","import React from 'react';\nimport { Form, Field, validators } from 'react-ocean-forms';\nimport { Input } from 'react-ocean-forms-bootstrap';\n\nfunction Example({ logMessage }) {\n  // onChange callback\n  const handleChange = (value) => {\n    logMessage('onChange, value: ' + JSON.stringify(value));\n  };\n\n  // onBlur callback\n  const handleBlur = () => {\n    logMessage('onBlur');\n  };\n\n  return (\n    <Form className=\"demo\">\n      <Field\n        name=\"myInput\"\n        label=\"Normal input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={Input}\n      />\n\n      <Field\n        name=\"requiredInput\"\n        label=\"Required input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={Input}\n        validators={[validators.required]}\n      />\n\n      <Field\n        name=\"infoInput\"\n        label=\"Info input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={Input}\n        info=\"Custom info text!\"\n      />\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, Field, validators } from 'react-ocean-forms';\nimport { Input } from 'react-ocean-forms-bootstrap';\n\nfunction Example() {\n  return (\n    <Form className=\"demo\" plaintext>\n      <Field\n        name=\"myInput\"\n        label=\"Normal input\"\n        component={Input}\n      />\n\n      <Field\n        name=\"requiredInput\"\n        label=\"Required input\"\n        component={Input}\n        validators={[validators.required]}\n      />\n\n      <Field\n        name=\"infoInput\"\n        label=\"Info input\"\n        component={Input}\n        info=\"Custom info text!\"\n      />\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, Field } from 'react-ocean-forms';\nimport { Input } from 'react-ocean-forms-bootstrap';\nimport { Button } from 'reactstrap';\n\nfunction Example() {\n  return (\n    <Form className=\"demo\">\n      <Field\n        name=\"prefixInput\"\n        label=\"With Prefix\"\n        component={Input}\n        prefix=\"Prefix text\"\n      />\n\n      <Field\n        name=\"customPrefixInput\"\n        label=\"Custom prefix\"\n        component={Input}\n        prefix={<Button>Prefix</Button>}\n      />\n\n      <Field\n        name=\"suffixInput\"\n        label=\"With Suffix\"\n        component={Input}\n        suffix=\"Suffix text\"\n      />\n\n      <Field\n        name=\"customSuffixInput\"\n        label=\"Custom Suffix\"\n        component={Input}\n        suffix={<Button>Suffix</Button>}\n      />\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport inputTypesDemo from './examples/InputTypes';\nimport plaintextDemo from './examples/PlainTextInput';\nimport prefixSuffixDemo from './examples/InputPrefixSuffix';\n\nconst inputTypes = require('!!raw-loader!./examples/InputTypes.js'); // eslint-disable-line\nconst plainText = require('!!raw-loader!./examples/PlainTextInput.js'); // eslint-disable-line\nconst prefixSuffix = require('!!raw-loader!./examples/InputPrefixSuffix.js'); // eslint-disable-line\n\nfunction InputPage() {\n  return (\n    <ComponentPage\n      title=\"Input\"\n      description=\"Defines a bootstrap form line containing a label and an input. Additionally it can\n      render an info button and info alert as well as validation messages. If the user adds the required\n      validator then it will mark the field as required as well.\"\n      parent=\"bootstrap\"\n    >\n      <Showcase\n        title=\"Bootstrap input\"\n        description=\"Showcase of the bootstrap input\"\n        component={inputTypesDemo}\n        code={inputTypes}\n      />\n\n      <Showcase\n        title=\"Prefix and suffix\"\n        description=\"Bootstraps prefix and suffix are also supported.\"\n        component={prefixSuffixDemo}\n        code={prefixSuffix}\n      />\n\n      <Showcase\n        title=\"Plaintext mode\"\n        description=\"All inputs from this package support the plaintext mode as well.\"\n        component={plaintextDemo}\n        code={plainText}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default InputPage;\n","import React from 'react';\nimport { Form, Field, validators } from 'react-ocean-forms';\nimport { Select } from 'react-ocean-forms-bootstrap';\n\nfunction Example({ logMessage }) {\n  // onChange callback\n  const handleChange = (value) => {\n    logMessage('onChange, value: ' + JSON.stringify(value));\n  };\n\n  // onBlur callback\n  const handleBlur = () => {\n    logMessage('onBlur');\n  };\n\n  const options = [\n    { label: 'Option 1', value: \"1\" },\n    { label: 'Option 2', value: \"2\" },\n  ];\n\n  return (\n    <Form className=\"demo\">\n      <Field\n        name=\"myInput\"\n        label=\"Normal input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={Select}\n        options={options}\n      />\n\n      <Field\n        name=\"requiredInput\"\n        label=\"Required input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={Select}\n        validators={[validators.required]}\n        options={options}\n      />\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport simpleSelectDemo from './examples/SimpleSelect';\n\nconst simpleSelect = require('!!raw-loader!./examples/SimpleSelect.js'); // eslint-disable-line\n\nfunction SelectPage() {\n  return (\n    <ComponentPage\n      title=\"Select\"\n      description=\"Defines a bootstrap form line containing a label and an input. Additionally it can\n      render an info button and info alert as well as validation messages. If the user adds the required\n      validator then it will mark the field as required as well.\"\n      parent=\"bootstrap\"\n    >\n      <Showcase\n        title=\"Bootstrap select\"\n        description=\"Showcase of the react-select integration\"\n        component={simpleSelectDemo}\n        code={simpleSelect}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default SelectPage;\n","import React from 'react';\nimport { Form, Field } from 'react-ocean-forms';\nimport { Check } from 'react-ocean-forms-bootstrap';\n\nfunction Example({ logMessage }) {\n  // onChange callback\n  const handleChange = (value) => {\n    logMessage('onChange, value: ' + JSON.stringify(value));\n  };\n\n  // onBlur callback\n  const handleBlur = () => {\n    logMessage('onBlur');\n  };\n\n  return (\n    <Form className=\"demo\">\n      <Field\n        name=\"check\"\n        label=\"Sample checkbox\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={Check}\n      />\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport simpleCheckDemo from './examples/SimpleCheck';\n\nconst simpleCheck = require('!!raw-loader!./examples/SimpleCheck.js'); // eslint-disable-line\n\nfunction CheckPage() {\n  return (\n    <ComponentPage\n      title=\"Select\"\n      description=\"Defines a bootstrap form line containing a checkbox with the label as the checkbox\n      text. Additionally it can render an info button and info alert as well as validation messages.\n      If the user adds the required validator then it will mark the field as required as well.\"\n      parent=\"bootstrap\"\n    >\n      <Showcase\n        title=\"Check\"\n        description=\"Showcase of a simple checkbox\"\n        component={simpleCheckDemo}\n        code={simpleCheck}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default CheckPage;\n","import React from 'react';\nimport { Form, Field } from 'react-ocean-forms';\nimport { DatePicker } from 'react-ocean-forms-bootstrap';\n\nfunction Example({ logMessage }) {\n  // onChange callback\n  const handleChange = (value) => {\n    logMessage('onChange, value: ' + JSON.stringify(value));\n  };\n\n  // onBlur callback\n  const handleBlur = () => {\n    logMessage('onBlur');\n  };\n\n  return (\n    <Form className=\"demo\">\n      <Field\n        name=\"datePicker\"\n        label=\"Sample date picker\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={DatePicker}\n        dateFormat=\"DD.MM.YYYY\"\n      />\n\n      <Field\n        name=\"timePicker\"\n        label=\"Sample time picker\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={DatePicker}\n        timeFormat=\"HH:mm\"\n      />\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport simpleDatePickerDemo from './examples/SimpleDatePicker';\n\nconst simpleDatePicker = require('!!raw-loader!./examples/SimpleDatePicker.js'); // eslint-disable-line\n\nfunction DatePickerPage() {\n  return (\n    <ComponentPage\n      title=\"DatePicker\"\n      description=\"Defines a bootstrap form line containing a label and a react-datetime input.\n      Additionally it can render an info button and info alert as well as validation messages.\n      If the user adds the required validator then it will mark the field as required as well.\"\n      parent=\"bootstrap\"\n    >\n      <Showcase\n        title=\"DatePicker\"\n        description=\"Showcase of a simple datepicker\"\n        component={simpleDatePickerDemo}\n        code={simpleDatePicker}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default DatePickerPage;\n","import React from 'react';\nimport { Form, Field, validators } from 'react-ocean-forms';\nimport { Input, ValidationSummary } from 'react-ocean-forms-bootstrap';\n\nfunction Example() {\n  return (\n    <Form className=\"demo\">\n      <ValidationSummary id=\"demoSummary\" />\n\n      <Field\n        name=\"requiredInput\"\n        label=\"Required input\"\n        component={Input}\n        validators={[validators.required]}\n      />\n\n      <button type=\"submit\">Submit</button>\n      <button type=\"reset\">Reset</button>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport simpleValidationSummaryDemo from './examples/SimpleValidationSummary';\n\nconst simpleValidationSummary = require('!!raw-loader!./examples/SimpleValidationSummary.js'); // eslint-disable-line\n\nfunction ValidationSummaryPage() {\n  return (\n    <ComponentPage\n      title=\"ValidationSummary\"\n      description=\"Displays a clickable list of errors from the current form. When an error is clicked,\n      the corresponding input field is focused.\"\n      parent=\"bootstrap\"\n    >\n      <Showcase\n        title=\"DatePicker\"\n        description=\"Showcase of a simple validation summary. Push submit to see the error.\"\n        component={simpleValidationSummaryDemo}\n        code={simpleValidationSummary}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default ValidationSummaryPage;\n","import React from 'react';\nimport { Form, Field } from 'react-ocean-forms';\nimport { Input, FormButton } from 'react-ocean-forms-bootstrap';\n\nfunction asyncValidator(value) {\n  return new Promise(function(resolve) {\n    setTimeout(() => {\n      if (value === '') {\n        resolve('Invalid input');\n      } else {\n        resolve();\n      }\n    }, 1000);\n  });\n}\n\nfunction Example({ logMessage }) {\n  return (\n    <Form className=\"demo\">\n      <Field\n        name=\"input\"\n        label=\"Sample input\"\n        component={Input}\n        asyncValidators={[asyncValidator]}\n      />\n\n      <FormButton type=\"submit\" color=\"primary\">Submit</FormButton>\n      <FormButton type=\"reset\">Reset</FormButton>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\nimport { Form, Field } from 'react-ocean-forms';\nimport { Input, FormButton } from 'react-ocean-forms-bootstrap';\n\nfunction Example() {\n  return (\n    <Form className=\"demo\" disabled>\n      <Field\n        name=\"input\"\n        label=\"Sample input\"\n        component={Input}\n      />\n\n      <FormButton type=\"submit\" color=\"primary\">Submit</FormButton>\n      <FormButton type=\"reset\">Reset</FormButton>\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport simpleFormButtonDemo from './examples/SimpleFormButton';\nimport disabledFormButtonDemo from './examples/DisabledFormButton';\n\nconst simpleFormButton = require('!!raw-loader!./examples/SimpleFormButton.js'); // eslint-disable-line\nconst disabledFormButton = require('!!raw-loader!./examples/DisabledFormButton.js'); // eslint-disable-line\n\nfunction FormButtonPage() {\n  return (\n    <ComponentPage\n      title=\"FormButton\"\n      description=\"Defines a bootstrap button that integrates into the Form context.\n      It will be disabled when the form is busy or disabled.\"\n      parent=\"bootstrap\"\n    >\n      <Showcase\n        title=\"FormButton\"\n        description=\"Showcase of the form button\"\n        component={simpleFormButtonDemo}\n        code={simpleFormButton}\n      />\n\n      <Showcase\n        title=\"Disabled form\"\n        description=\"FormButtons are disabled if the form is disabled too\"\n        component={disabledFormButtonDemo}\n        code={disabledFormButton}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default FormButtonPage;\n","import React from 'react';\nimport { Form, Field } from 'react-ocean-forms';\nimport { OnOffToggleButton } from 'react-ocean-forms-bootstrap';\n\nfunction Example({ logMessage }) {\n  // onChange callback\n  const handleChange = (value) => {\n    logMessage('onChange, value: ' + JSON.stringify(value));\n  };\n\n  // onBlur callback\n  const handleBlur = () => {\n    logMessage('onBlur');\n  };\n\n  return (\n    <Form className=\"demo\">\n      <Field\n        name=\"check\"\n        label=\"Sample toggle\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        component={OnOffToggleButton}\n      />\n    </Form>\n  );\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport simpleOnOffDemo from './examples/SimpleOnOff';\n\nconst simpleOnOff = require('!!raw-loader!./examples/SimpleOnOff.js'); // eslint-disable-line\n\nfunction OnOffToggleButtonPage() {\n  return (\n    <ComponentPage\n      title=\"OnOffToggleButton\"\n      description=\"Defines a bootstrap button group that can be toggled between true and false.\"\n      parent=\"bootstrap\"\n    >\n      <Showcase\n        title=\"Toggle button\"\n        description=\"Showcase of the toggle button\"\n        component={simpleOnOffDemo}\n        code={simpleOnOff}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default OnOffToggleButtonPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport 'react-ocean-forms-bootstrap/build/main.css';\n\nimport InputPage from './InputPage';\nimport SelectPage from './SelectPage';\nimport CheckPage from './CheckPage';\nimport DatePickerPage from './DatePickerPage';\nimport ValidationSummaryPage from './ValidationSummaryPage';\nimport FormButtonPage from './FormButtonPage';\nimport OnOffToggleButtonPage from './OnOffToggleButtonPage';\nimport NotFound from '../../not-found';\n\nfunction Bootstrap() {\n  return (\n    <Switch>\n      <Route path=\"/components/bootstrap/input/\" component={InputPage} />\n      <Route path=\"/components/bootstrap/select/\" component={SelectPage} />\n      <Route path=\"/components/bootstrap/check/\" component={CheckPage} />\n      <Route path=\"/components/bootstrap/date-picker/\" component={DatePickerPage} />\n      <Route path=\"/components/bootstrap/validation-summary/\" component={ValidationSummaryPage} />\n      <Route path=\"/components/bootstrap/form-button/\" component={FormButtonPage} />\n      <Route path=\"/components/bootstrap/on-off-toggle-button/\" component={OnOffToggleButtonPage} />\n      <Redirect from=\"/components/bootstrap\" to=\"/components/bootstrap/input\" exact />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  );\n}\n\nexport default Bootstrap;\n","import React from 'react';\nimport { IntlProvider, FormattedMessage, addLocaleData } from 'react-intl';\nimport deLocaleData from 'react-intl/locale-data/de';\nimport IntlFrom from 'react-ocean-forms-react-intl';\nimport { Button } from 'reactstrap';\nimport { Field, validators, FormText } from 'react-ocean-forms';\nimport { Input, FormButton } from 'react-ocean-forms-bootstrap';\n\nclass Example extends React.Component {\n  state = { locale: 'en' };\n  messages = {\n    en: {\n      lblName: 'First name',\n      lblMail: 'E-Mail',\n      submit: 'Submit',\n      reset: 'Reset',\n      customText: 'My example text',\n      ojs_field_required: 'This field is required!',\n      ojs_error_required: 'This field is required!',\n    },\n    de: {\n      lblName: 'Vorname',\n      lblMail: 'E-Mail',\n      submit: 'Senden',\n      reset: 'Zurücksetzen',\n      customText: 'Mein Beispieltext',\n      ojs_field_required: 'Pflichtfeld!',\n      ojs_error_required: 'Dieses Feld muss ausgefüllt werden!',\n    },\n  };\n\n  render() {\n    const { locale } = this.state;\n\n    addLocaleData(deLocaleData);\n\n    return (\n      <IntlProvider locale={locale} messages={this.messages[locale]}>\n        <IntlFrom className=\"demo\">\n          <p>\n            <Button\n              className=\"mr-2\"\n              onClick={() => this.setState({ locale: 'en' })}\n            >\n              English\n            </Button>\n            <Button\n              className=\"mr-2\"\n              onClick={() => this.setState({ locale: 'de' })}\n            >\n              German\n            </Button>\n          </p>\n\n          <Field\n            name=\"name\"\n            label=\"lblName\"\n            component={Input}\n            validators={[validators.required]}\n          />\n          <Field\n            name=\"mail\"\n            label=\"lblMail\"\n            component={Input}\n          />\n\n          <p>\n            <FormText text=\"customText\" />\n          </p>\n\n          <FormButton color=\"primary\">\n            <FormattedMessage id=\"submit\" />\n          </FormButton>\n          <FormButton type=\"reset\">\n            <FormattedMessage id=\"reset\" />\n          </FormButton>\n        </IntlFrom>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default Example;\n","import React from 'react';\n\nimport ComponentPage from '../shared/ComponentPage';\nimport Showcase from '../shared/Showcase';\n\nimport formDemo from './examples/IntlFormExample';\n\nconst form = require('!!raw-loader!./examples/IntlFormExample.js'); // eslint-disable-line\n\nfunction IntlFormPage() {\n  return (\n    <ComponentPage\n      title=\"IntlForm\"\n      description=\"Drop-in replacement for regular Form component. Enables react-intl support.\n      Must live inside a IntlProvider.\"\n      parent=\"intl\"\n    >\n      <Showcase\n        title=\"Localized form\"\n        description=\"Showcase of the i18n support\"\n        component={formDemo}\n        code={form}\n      />\n    </ComponentPage>\n  );\n}\n\nexport default IntlFormPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport IntlFormPage from './IntlFormPage';\nimport NotFound from '../../not-found';\n\nfunction Intl() {\n  return (\n    <Switch>\n      <Route path=\"/components/intl/intl-form\" component={IntlFormPage} />\n      <Redirect from=\"/components/intl\" to=\"/components/intl/intl-form\" exact />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  );\n}\n\nexport default Intl;\n","import React from 'react';\nimport { Row, Col, Nav, NavItem, NavLink } from 'reactstrap';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\n\nimport CoreComponents from './core';\nimport BootstrapComponents from './bootstrap';\nimport IntlComponents from './intl';\nimport NotFound from '../not-found';\n\nfunction Components() {\n  return (\n    <Row>\n      <Col md=\"8\">\n        <Switch>\n          <Route path=\"/components/core\" component={CoreComponents} />\n          <Route path=\"/components/bootstrap\" component={BootstrapComponents} />\n          <Route path=\"/components/intl\" component={IntlComponents} />\n          <Redirect from=\"/components\" to=\"/components/core/form\" exact />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </Col>\n      <Col md=\"4\">\n        <Nav vertical>\n          <h6>react-ocean-forms</h6>\n          <NavLink tag={Link} to=\"/components/core/form/\">Form</NavLink>\n          <NavLink tag={Link} to=\"/components/core/field/\">Field</NavLink>\n          <NavLink tag={Link} to=\"/components/core/field-group/\">FieldGroup</NavLink>\n          <NavLink tag={Link} to=\"/components/core/validation-summary/\">ValidationSummary</NavLink>\n          <NavLink tag={Link} to=\"/components/core/input/\">Input</NavLink>\n          <NavLink tag={Link} to=\"/components/core/form-button/\">FormButton</NavLink>\n          <NavLink tag={Link} to=\"/components/core/form-text/\">FormText</NavLink>\n        </Nav>\n\n        <Nav vertical>\n          <h6 className=\"mt-4\">react-ocean-forms-bootstrap</h6>\n          <NavLink tag={Link} to=\"/components/bootstrap/input/\">Input</NavLink>\n          <NavLink tag={Link} to=\"/components/bootstrap/select/\">Select</NavLink>\n          <NavLink tag={Link} to=\"/components/bootstrap/check/\">Check</NavLink>\n          <NavLink tag={Link} to=\"/components/bootstrap/date-picker/\">DatePicker</NavLink>\n          <NavLink tag={Link} to=\"/components/bootstrap/validation-summary/\">ValidationSummary</NavLink>\n          <NavLink tag={Link} to=\"/components/bootstrap/form-button/\">FormButton</NavLink>\n          <NavLink tag={Link} to=\"/components/bootstrap/on-off-toggle-button/\">OnOffToggleButton</NavLink>\n        </Nav>\n\n        <Nav vertical>\n          <h6 className=\"mt-4\">react-ocean-forms-react-intl</h6>\n          <NavItem>\n            <NavLink tag={Link} to=\"/components/intl/intl-form/\">IntlForm</NavLink>\n          </NavItem>\n        </Nav>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Components;\n","import React from 'react';\nimport PrismCode from 'react-prism';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction ApiPage(props) {\n  const {\n    title,\n    description,\n    codeExample,\n    children,\n    parent,\n    hideComponentLink,\n    ...rest\n  } = props;\n\n  let parentLabel = null;\n  switch (parent) {\n    case \"core\":\n      parentLabel = \"react-ocean-forms\";\n      break;\n\n    case \"bootstrap\":\n      parentLabel = \"react-ocean-forms-bootstrap\";\n      break;\n\n    case \"intl\":\n      parentLabel = \"react-ocean-forms-react-intl\";\n      break;\n\n    default:\n      break;\n  }\n\n  const componentLink = title.replace(/(?!^)[A-Z]/g, (match) => `-${match}`).toLowerCase();\n\n  return (\n    <div className=\"component-page\" {...rest}>\n      <Breadcrumb>\n        <BreadcrumbItem>API</BreadcrumbItem>\n        <BreadcrumbItem>{parentLabel}</BreadcrumbItem>\n        <BreadcrumbItem tag=\"strong\">{title}</BreadcrumbItem>\n      </Breadcrumb>\n\n      <h1>\n        {title}\n        {' '}{!hideComponentLink && <Link to={`/components/${parent}/${componentLink}`}>(go to Showcase)</Link>}\n      </h1>\n      <p>{description}</p>\n      <PrismCode className=\"lang-jsx\" component=\"pre\">{codeExample}</PrismCode>\n\n      {children}\n    </div>\n  );\n}\n\nApiPage.defaultProps = {\n  hideComponentLink: false,\n};\n\nexport default ApiPage;\n","import React from 'react';\nimport PrismCode from 'react-prism';\n\nfunction PropInfo(props) {\n  const {\n    name,\n    type,\n    defaultValue,\n    description,\n    required,\n    deprecated,\n    example,\n    children\n  } = props;\n\n  return (\n    <div className=\"prop-info\">\n      <h5 id={name}>\n        {name}\n        {deprecated ? <span className=\"text-danger font-italic\"> deprecated</span> : null}\n        {required || type || defaultValue ? <br /> : null}\n        {required ? <span className=\"text-danger font-italic\">Required </span> : null}\n        {type ? <span className=\"text-info font-weight-normal font-italic\">{type}</span> : null}\n        {defaultValue ? <span className=\"text-info font-weight-normal font-italic\">, default: {defaultValue}</span> : null}\n      </h5>\n      <div className=\"meta\">\n        {description ? <p>{description}</p> : ''}\n        {children}\n        {example ? <PrismCode className=\"lang-jsx\" component=\"pre\">{example}</PrismCode> : ''}\n      </div>\n    </div>\n  );\n}\n\nexport default PropInfo;\n","import React from 'react';\nimport PrismCode from 'react-prism';\nimport { Link } from 'react-router-dom';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/Form.js'); // eslint-disable-line\nconst valuesExample = require('!!raw-loader!./examples/ValuesExample.js'); // eslint-disable-line\n\nfunction FormPage() {\n  return (\n    <ApiPage\n      title=\"Form\"\n      description=\"The form is the main component. It glues together all the\n      Form logic through React's new Context api.\"\n      codeExample={introExample}\n      parent=\"core\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"asyncValidationOnChange\" type=\"Boolean\" defaultValue=\"false\">\n        If set to true the form will trigger asynchronous validation on <Link to=\"../field\">Fields</Link> whenever they\n        change (e.g. on key press). Default behaviour is that the fields will only async validate\n        when they loose focus. Can be overriden per field.\n      </PropInfo>\n\n      <PropInfo name=\"asyncValidationWait\" type=\"Number\" defaultValue=\"400\">\n        Configures the wait time before the async <Link to=\"../validators\">validators</Link> will be called. Per default the form\n        will call the async validators only 400ms after the last value change. Can be overriden per field.\n      </PropInfo>\n\n      <PropInfo name=\"className\" type=\"String\">\n        Sets the className of the html form.\n      </PropInfo>\n\n      <PropInfo name=\"defaultValues\" type=\"Object\">\n        <p>\n          Contains the default values of the form. Those values will be put into the according fields\n          when the form initializes. Example default values object:\n        </p>\n        <PrismCode className=\"lang-jsx\" component=\"pre\">{valuesExample}</PrismCode>\n      </PropInfo>\n\n      <PropInfo name=\"values\" type=\"Object\">\n        <p>\n          Contains the values of the form. Changing this property will update all Field values, overwriting\n          their default values but also any value the user put in. Example values object:\n        </p>\n        <PrismCode className=\"lang-jsx\" component=\"pre\">{valuesExample}</PrismCode>\n      </PropInfo>\n\n      <PropInfo name=\"disabled\" type=\"Boolean\" defaultValue=\"false\">\n        If set to true the form will disable all <Link to=\"../field\">Fields</Link> and <Link to=\"../form-button\">FormButtons</Link>.\n      </PropInfo>\n\n      <PropInfo name=\"plaintext\" type=\"Boolean\" defaultValue=\"false\">\n        If set to true, all the fields will display only text instead of an input element.\n        This is useful to re-use Fields in a check page.\n      </PropInfo>\n\n      <PropInfo name=\"formatString\" type=\"Function\">\n        <p>\n          If set every text output will be put through this function. Per default an internal\n          implementation is used. The function receives the following parameters and it must\n          return a string.\n        </p>\n        <h6>Arguments</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">id <span className=\"text-info font-weight-normal font-italic\">(string)</span></dt>\n          <dd className=\"col-sm-9\">Id of the message.</dd>\n\n          <dt className=\"col-sm-3\">params <span className=\"text-info font-weight-normal font-italic\">(?Object)</span></dt>\n          <dd className=\"col-sm-9\">\n            Optional parameters that should be replaced in the message.\n          </dd>\n        </dl>\n\n        <h6>Expected return value</h6>\n        <p><strong>String</strong> - the function should return a string with the message.</p>\n      </PropInfo>\n\n      <h2>Events</h2>\n      <PropInfo name=\"onSubmit\" type=\"Function\">\n        <p>Triggered when the form has been validated successfully and is ready to be submitted.</p>\n        <p>\n          If the passed function is an async function / returns a promise, then the form context\n          will stay in a busy state until the function resolves.\n        </p>\n        <h6>Arguments</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">values <span className=\"text-info font-weight-normal font-italic\">(Object)</span></dt>\n          <dd className=\"col-sm-9\">\n            Contains the form values. The name of the fields are used as property names for the values\n            object. <Link to=\"../field-group\">FieldGroups</Link> result in a nested object.\n          </dd>\n\n          <dt className=\"col-sm-3\">submitArgs <span className=\"text-info font-weight-normal font-italic\">(any)</span></dt>\n          <dd className=\"col-sm-9\">\n            By default undefined. Can be set by <Link to=\"../form-button\">FormButton</Link> or any other manual way of calling the\n            submit method of the form context.\n          </dd>\n        </dl>\n      </PropInfo>\n\n      <PropInfo name=\"onValidate\" type=\"Function\">\n        <p>\n          Triggered after all field validations have been successfull. Provides the current values\n          end expects an error object with the field names as properties and the errors inside\n          those properties.\n        </p>\n        <h6>Arguments</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">values <span className=\"text-info font-weight-normal font-italic\">(Object)</span></dt>\n          <dd className=\"col-sm-9\">\n            Contains the form values. The name of the fields are used as property names for the values\n            object. <Link to=\"../field-group\">FieldGroups</Link> result in a nested object.\n          </dd>\n        </dl>\n\n        <h6>Expected return value</h6>\n        <p><strong>?Object</strong> - should return null if the values are valid, otherwise an error object.</p>\n      </PropInfo>\n\n      <PropInfo name=\"onReset\" type=\"Function\">\n        <p>Triggered when the form has been resetted by the user.</p>\n        <h6>Arguments</h6>\n        <p>None.</p>\n      </PropInfo>\n\n      <PropInfo name=\"onFieldValueChanged\" type=\"Function\" deprecated>\n        <p>Triggered when the value of a field changes.</p>\n        <h6>Arguments</h6>\n        <dl className=\"row\">\n        <dt className=\"col-sm-3\">name <span className=\"text-info font-weight-normal font-italic\">(string)</span></dt>\n          <dd className=\"col-sm-9\">Name of the changed field.</dd>\n\n          <dt className=\"col-sm-3\">value <span className=\"text-info font-weight-normal font-italic\">(any)</span></dt>\n          <dd className=\"col-sm-9\">New field value.</dd>\n        </dl>\n      </PropInfo>\n    </ApiPage>\n  );\n}\n\nexport default FormPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/Field.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ApiPage\n      title=\"Field\"\n      description=\"Defines a form field which will be managed by the Form.\"\n      codeExample={introExample}\n      parent=\"core\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"name\" type=\"String\" required>\n        Name of this input. Will be used as the unique identifier of this value.<br />\n        <strong>Must be unique inside its context (e.g. form wide or form group wide)!</strong>\n      </PropInfo>\n\n      <PropInfo name=\"label\" type=\"String\" required>\n        Message id of the label that will be displayed along the input. If you don't want to use any i18n\n        features you can pass a raw message instead.\n      </PropInfo>\n\n      <PropInfo name=\"component\" type=\"React.Component\" required>\n        <p>\n          The component that should be rendered as input.\n        </p>\n        <p>\n          react-ocean-forms ships with an example html input implementation.\n          For a pre-made bootstrap option take a look at <mark>react-ocean-forms-bootstrap</mark>.\n        </p>\n      </PropInfo>\n\n      <PropInfo name=\"validators\" type=\"Array[Function]\">\n        <p>\n          Contains an array of functions that will validate this input. Those functions are called whenever the value changes\n          (on keypress, ...). They are called in order and whenever one fails the other ones are not called. The validator\n          function must return either undefined or a string containing the message id of the validation error text.\n        </p>\n        <p>\n          react-ocean-forms ships with some sample validators. See <Link to=\"../validators\">Validators</Link> for further information.\n        </p>\n      </PropInfo>\n\n      <PropInfo name=\"asyncValidators\" type=\"Array[Function]\">\n        Contains an array of functions that must return a Promise. Those functions are called by default onBlur,\n        however this behaviour can be changed by setting asyncValidateOnChange on the Form. The Form will call all\n        async validators of a Field at the same time and will wait for the result of every one of them. If one of\n        them returns a string the field will be marked as invalid. Per default the form will wait for 400ms before\n        triggering any validation. This is put in place so the validation won't get triggered on every keystroke of\n        the user. The async validators will be called 400ms after the last value change.\n      </PropInfo>\n\n      <PropInfo name=\"asyncValidateOnChange\" type=\"Boolean\" defaultValue=\"form default\">\n        If set to true the form will trigger asynchronous validation on this field whenever it changes (e.g. on key press).\n        Default behaviour is that the fields will only async validate when they loose focus.\n      </PropInfo>\n\n      <PropInfo name=\"asyncValidationWait\" type=\"Number\" defaultValue=\"form default\">\n        Configures the wait time before the async validators will be called. Per default the form will call the async validators\n        only 400ms after the last value change.\n      </PropInfo>\n\n      <PropInfo name=\"defaultValue\" type=\"Object\">\n        Overwrites the Form default values for this field. This value will be used during form initialization.\n      </PropInfo>\n\n      <PropInfo name=\"value\" type=\"Object\">\n        Overwrites the Form value for this field. Changing this property will update the Field value,\n        overwriting its default value but also any value the user put in.\n      </PropInfo>\n\n      <PropInfo name=\"Specialized properties\">\n        <p>\n          Depending on the input component that is used with the Field, the Field will accept a range of specialized properties\n          to configure the behaviour of the component. Those properties are described at the according documentation of the input component.\n        </p>\n        <p className=\"font-weight-bold\">\n          The Field will pass all non-field properties directly through to the Input Component.\n        </p>\n      </PropInfo>\n\n      <h2>Events</h2>\n      <PropInfo name=\"onChange\" type=\"Function\">\n        <p>Triggered on field value change.</p>\n        <h6>Arguments</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">value <span className=\"text-info font-weight-normal font-italic\">(any)</span></dt>\n          <dd className=\"col-sm-9\">\n            Contains the current field value.\n          </dd>\n        </dl>\n      </PropInfo>\n\n      <PropInfo name=\"onBlur\" type=\"Function\">\n        <p>Triggered on field blur.</p>\n        <h6>Arguments</h6>\n        <p>None.</p>\n      </PropInfo>\n\n      <h2>Lifecycle Hooks</h2>\n      <PropInfo name=\"getDisplayValue\" type=\"Function\">\n        <p>Called, when the field is loading its value from the forms default values. Must return the value to display.</p>\n        <h6>Arguments</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">value <span className=\"text-info font-weight-normal font-italic\">(any)</span></dt>\n          <dd className=\"col-sm-9\">\n            Contains the current field value.\n          </dd>\n          <dt className=\"col-sm-3\">meta <span className=\"text-info font-weight-normal font-italic\">(Object)</span></dt>\n          <dd className=\"col-sm-9\">\n            Contains the properties <mark>disabled</mark> and <mark>plaintext</mark>, representing\n            the current <Link to=\"../form\">Form</Link> setup.\n          </dd>\n        </dl>\n\n        <h6>Expected return value</h6>\n        <p><strong>Any</strong> - the function should return the value that should be displayed.</p>\n      </PropInfo>\n\n      <PropInfo name=\"getSubmitValue\" type=\"Function\">\n        <p>Called, when the field is submitting its value to the form. Must return the value to submit.</p>\n        <h6>Arguments</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">value <span className=\"text-info font-weight-normal font-italic\">(any)</span></dt>\n          <dd className=\"col-sm-9\">\n            Contains the current field value.\n          </dd>\n          <dt className=\"col-sm-3\">meta <span className=\"text-info font-weight-normal font-italic\">(Object)</span></dt>\n          <dd className=\"col-sm-9\">\n            Contains the properties <mark>disabled</mark> and <mark>plaintext</mark>, representing\n            the current <Link to=\"../form\">Form</Link> setup.\n          </dd>\n        </dl>\n\n        <h6>Expected return value</h6>\n        <p><strong>Any</strong> - the function should return the value that should be submitted.</p>\n      </PropInfo>\n\n      <h2>Writing your own Input Component</h2>\n      <p>Please refer to the <Link to=\"../input\">Input</Link> API documentation for further information.</p>\n    </ApiPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/FieldGroup.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ApiPage\n      title=\"FieldGroup\"\n      description=\"Defines a collection of fields. It will combine its values to a sub-object and provides the possibility\n      to attach validators to the group.\"\n      codeExample={introExample}\n      parent=\"core\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"name\" type=\"String\" required>\n        Name of this input. Will be used as the unique identifier of this value.<br />\n        <strong>Must be unique inside its context (e.g. form wide or form group wide)!</strong>\n      </PropInfo>\n\n      <PropInfo name=\"label\" type=\"String\" required>\n        Message id of the label that will be displayed along the input. If you don't want to use any i18n\n        features you can pass a raw message instead.\n      </PropInfo>\n\n      <PropInfo name=\"render\" type=\"Function\" required>\n        <p>Gets called to render its children (see render prop pattern).</p>\n        <h6>Arguments</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">groupInfo <span className=\"text-info font-weight-normal font-italic\">(Object)</span></dt>\n          <dd className=\"col-sm-9\">\n            Contains the group state consisting of <mark>fullName</mark>, <mark>isValidating</mark>,\n            <mark>valid</mark>, <mark>error</mark> which can be used to display those informations.\n          </dd>\n        </dl>\n      </PropInfo>\n\n      <PropInfo name=\"validators\" type=\"Array[Function]\">\n        <p>\n          Contains an array of functions that will validate this input. Those functions are called whenever the value changes\n          (on keypress, ...). They are called in order and whenever one fails the other ones are not called. The validator\n          function must return either undefined or a string containing the message id of the validation error text.\n        </p>\n        <p>\n          In case of a validator attached to a group, the validator will receive an object as the value parameter. This object\n          will contain the values of the <Link to=\"../field\">Fields</Link> inside the group.\n        </p>\n        <p>\n          react-ocean-forms ships with some sample validators. See <Link to=\"../validators\">Validators</Link> for further information.\n        </p>\n      </PropInfo>\n\n      <PropInfo name=\"asyncValidators\" type=\"Array[Function]\">\n        <p>\n          Contains an array of functions that must return a Promise. Those functions are called by default onBlur,\n          however this behaviour can be changed by setting asyncValidateOnChange on the Form. The Form will call all\n          async validators of a Field at the same time and will wait for the result of every one of them. If one of\n          them returns a string the field will be marked as invalid. Per default the form will wait for 400ms before\n          triggering any validation. This is put in place so the validation won't get triggered on every keystroke of\n          the user. The async validators will be called 400ms after the last value change.\n        </p>\n        <p>\n          In case of a validator attached to a group, the validator will receive an object as the value parameter. This object\n          will contain the values of the <Link to=\"../field\">Fields</Link> inside the group.\n        </p>\n      </PropInfo>\n\n      <PropInfo name=\"asyncValidateOnChange\" type=\"Boolean\" defaultValue=\"form default\">\n        If set to true the form will trigger asynchronous validation on this field whenever it changes (e.g. on key press).\n        Default behaviour is that the fields will only async validate when they loose focus.\n      </PropInfo>\n\n      <PropInfo name=\"asyncValidationWait\" type=\"Number\" defaultValue=\"form default\">\n        Configures the wait time before the async validators will be called. Per default the form will call the async validators\n        only 400ms after the last value change.\n      </PropInfo>\n\n      <PropInfo name=\"defaultValues\" type=\"Object\">\n        Overwrites the Form default values for the child fields of this field group. Those values will be put into the according\n        fields when the form initializes.\n      </PropInfo>\n\n      <PropInfo name=\"values\" type=\"Object\">\n        Overwrites the Form values for the child fields of this field group. Changing this property will update all Field values,\n        overwriting their default values but also any value the user put in.\n      </PropInfo>\n\n      <h2>Events</h2>\n      <p>The <mark>FieldGroup</mark> doesn't emit any events.</p>\n    </ApiPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/ValidationSummary.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ApiPage\n      title=\"ValidationSummary\"\n      description=\"Displays a clickable list of errors from the current form. When an error is clicked,\n      the corresponding input field is focused.\"\n      codeExample={introExample}\n      parent=\"core\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"id\" type=\"String\" required>\n        Id of this input. Will be used as the unique identifier of the div.<br />\n        <strong>Must be unique form wide!</strong>\n      </PropInfo>\n\n      <PropInfo name=\"title\" type=\"String\">\n        Message that will be used as the title, wrapped in a <mark>h4</mark>.\n      </PropInfo>\n\n      <PropInfo name=\"disableFocusOnSubmit\" type=\"Boolean\" defaultValue=\"false\">\n        If set to true the validation summary will stop automatically scrolling to itself\n        when the user clicks on a submit button and the form is invalid.\n      </PropInfo>\n\n      <PropInfo name=\"renderFieldError\" type=\"Function\">\n        <p>\n          Optional function that can be used to customize the output of each error.\n        </p>\n        <h6>Arguments</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">id <span className=\"text-info font-weight-normal font-italic\">(String)</span></dt>\n          <dd className=\"col-sm-9\">\n            Unique id\n          </dd>\n\n          <dt className=\"col-sm-3\">fieldName <span className=\"text-info font-weight-normal font-italic\">(String)</span></dt>\n          <dd className=\"col-sm-9\">\n            Name / label of the field\n          </dd>\n\n          <dt className=\"col-sm-3\">errors <span className=\"text-info font-weight-normal font-italic\">(Object)</span></dt>\n          <dd className=\"col-sm-9\">\n            Object / Array of objects with the rendered error messages\n          </dd>\n\n          <dt className=\"col-sm-3\">linkCallback <span className=\"text-info font-weight-normal font-italic\">(Function)</span></dt>\n          <dd className=\"col-sm-9\">\n            Function that should be called on click, will focus on the input element.\n          </dd>\n        </dl>\n      </PropInfo>\n\n      <PropInfo name=\"render\" type=\"Function\">\n        <p>\n          Optional function that can be used to customize the ValidationSummary rendering.\n          Note: This function will only be called when there are errors to be displayed.\n        </p>\n        <h6>Arguments</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">children <span className=\"text-info font-weight-normal font-italic\">(Object)</span></dt>\n          <dd className=\"col-sm-9\">\n            Object containing the rendered ValidationSummary content.\n          </dd>\n        </dl>\n      </PropInfo>\n\n      <h2>Events</h2>\n      <p>The <mark>ValidationSummary</mark> doesn't emit any events.</p>\n    </ApiPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\nimport PrismCode from 'react-prism';\nimport { Link } from 'react-router-dom';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/Input.js'); // eslint-disable-line\nconst customInputExample = require('!!raw-loader!./examples/CustomInput.js'); // eslint-disable-line\nconst customInputUsageExample = require('!!raw-loader!./examples/CustomInputUsage.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ApiPage\n      title=\"Input\"\n      description=\"Defines a form line containing a label and an input. Additionally it will render\n      validation messages. If the user adds the required validator then it\n      will mark the field as required as well.\"\n      codeExample={introExample}\n      parent=\"core\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"type\" type=\"String\" defaultValue=\"text\">\n        HTML5 input type of the input element.\n      </PropInfo>\n\n      <h2>Events</h2>\n      <p>See <Link to=\"../field\">Fields</Link> for event handling.</p>\n\n      <h2>Writing your own Input Component</h2>\n      <p>\n        An Input Component is just a regular React Component that gets provided with special\n        props by the <Link to=\"../field\">Field</Link>. This makes it quite easy to write your own components,\n        as most of the Form logic will be handled by the Field wrapper.\n      </p>\n      <p>\n        Your component will be supplied with following form meta props, additionally to any\n        custom props that you attach to the Field.\n      </p>\n\n      <PropInfo name=\"field\" type=\"Object\">\n        <p>An object that is designed to be directly attached to the html input element.</p>\n        <h6>Properties</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">id <span className=\"text-info font-weight-normal font-italic\">(String)</span></dt>\n          <dd className=\"col-sm-9\">\n            Unique id of the input element. The id is group-aware, meaning that it will\n            be prefixed by the id of the containing group (if any).\n          </dd>\n          <dt className=\"col-sm-3\">name <span className=\"text-info font-weight-normal font-italic\">(String)</span></dt>\n          <dd className=\"col-sm-9\">\n            Alias for id.\n          </dd>\n          <dt className=\"col-sm-3\">value <span className=\"text-info font-weight-normal font-italic\">(any)</span></dt>\n          <dd className=\"col-sm-9\">\n            Current field value. Important: the <Link to=\"../field\">Field</Link> will manage the value for you.\n          </dd>\n          <dt className=\"col-sm-3\">disabled <span className=\"text-info font-weight-normal font-italic\">(Boolean)</span></dt>\n          <dd className=\"col-sm-9\">\n            True if the input should be disabled. Set by the form-wide disabled prop.\n          </dd>\n          <dt className=\"col-sm-3\">onChange <span className=\"text-info font-weight-normal font-italic\">(Function)</span></dt>\n          <dd className=\"col-sm-9\">\n            Handler for the onChange event.\n          </dd>\n          <dt className=\"col-sm-3\">onBlur <span className=\"text-info font-weight-normal font-italic\">(Function)</span></dt>\n          <dd className=\"col-sm-9\">\n            Handler for the onBlur event.\n          </dd>\n        </dl>\n      </PropInfo>\n\n      <PropInfo name=\"meta\" type=\"Object\">\n        <p>Object containing various meta information about the field state.</p>\n        <h6>Properties</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">valid <span className=\"text-info font-weight-normal font-italic\">(Boolean)</span></dt>\n          <dd className=\"col-sm-9\">\n            True if the input is valid. Is updated through the validators results.\n          </dd>\n          <dt className=\"col-sm-3\">error <span className=\"text-info font-weight-normal font-italic\">(Object)</span></dt>\n          <dd className=\"col-sm-9\">\n            Contains the current error object if the field is invalid.\n          </dd>\n          <dt className=\"col-sm-3\">isValidating <span className=\"text-info font-weight-normal font-italic\">(Boolean)</span></dt>\n          <dd className=\"col-sm-9\">\n            True if the input is currently validated by an asynchronous validator. Useful for displaying\n            e.g. spinner to indicate that a background task is active.\n          </dd>\n          <dt className=\"col-sm-3\">touched <span className=\"text-info font-weight-normal font-italic\">(Boolean)</span></dt>\n          <dd className=\"col-sm-9\">\n            True if the input has been touched since loading.\n          </dd>\n          <dt className=\"col-sm-3\">plaintext <span className=\"text-info font-weight-normal font-italic\">(Boolean)</span></dt>\n          <dd className=\"col-sm-9\">\n            True if the <Link to=\"../form\">Form</Link> is in plaintext mode. The input should be rendered in a way that\n            is read-only (e.g. for a reusable check page with all the user input).\n          </dd>\n          <dt className=\"col-sm-3\">stringFormatter <span className=\"text-info font-weight-normal font-italic\">(Function)</span></dt>\n          <dd className=\"col-sm-9\">\n            A function that should be used for displaying any text in the ui. Depending on the Form setup, it will\n            either display the message as-is or will use any i18n method (if you use <mark>react-ocean-forms-react-intl</mark> for example).\n          </dd>\n        </dl>\n      </PropInfo>\n\n      <PropInfo name=\"label\" type=\"String\">\n        The label prop of the <Link to=\"../field\">Field</Link>.\n      </PropInfo>\n\n      <h5>Example custom input</h5>\n      <p>This is an example implentation of a very simple input component.</p>\n      <PrismCode className=\"lang-jsx\" component=\"pre\">{customInputExample}</PrismCode>\n      <p>Usage of your custom input:</p>\n      <PrismCode className=\"lang-jsx\" component=\"pre\">{customInputUsageExample}</PrismCode>\n    </ApiPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/FormButton.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ApiPage\n      title=\"FormButton\"\n      description=\"Defines a button that integrates into the form context. It will\n      be disabled when the form is busy or disabled. You can also pass submitArgs to\n      the onSubmit handler this way.\"\n      codeExample={introExample}\n      parent=\"core\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"type\" type=\"String\" defaultValue=\"submit\">\n        Type of the button, either <mark>submit</mark>, <mark>reset</mark> or <mark>button</mark>.\n      </PropInfo>\n\n      <PropInfo name=\"disabled\" type=\"Boolean\" defaultValue=\"false\">\n        True, if the button should be always disabled. If set to false it will be still disabled\n        if the form context is busy or disabled.\n      </PropInfo>\n\n      <PropInfo name=\"submitArgs\" type=\"Object\">\n        Optional object that will be passed as the second parameter to <mark>form.onSubmit</mark> if\n        the button is of <mark>submit</mark> type.\n      </PropInfo>\n\n      <PropInfo name=\"component\" type=\"React.Component\">\n        Can be used to render any other component other than the standard html <mark>button</mark>.\n      </PropInfo>\n\n      <PropInfo name=\"Other properties\">\n        The FormButton will pass all non FormButton properties directly through to the rendered component.\n      </PropInfo>\n\n      <h2>Events</h2>\n      <p>The <mark>FormButton</mark> doesn't emit any events.</p>\n    </ApiPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/FormText.js'); // eslint-disable-line\n\nfunction FormTextPage() {\n  return (\n    <ApiPage\n      title=\"FormText\"\n      description=\"Wrapper for text output. It will use the Form.stringFormatter function\n      to output the message passed through the props. Best practice for custom input component\n      development is to pass every text output through the stringFormatter. This enables the\n      user of the form to add the react-ocean-forms-react-intl package and get i18n support\n      out of the box.\"\n      codeExample={introExample}\n      parent=\"core\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"text\" type=\"String\" required>\n        Id of the message.\n      </PropInfo>\n\n      <PropInfo name=\"values\" type=\"Object\">\n        Optional parameters that should be replaced in the message.\n      </PropInfo>\n    </ApiPage>\n  );\n}\n\nexport default FormTextPage;\n","import React from 'react';\nimport PrismCode from 'react-prism';\nimport { Link } from 'react-router-dom';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/Validators.js'); // eslint-disable-line\nconst paramsExample = require('!!raw-loader!./examples/ValidatorsWithParams.js'); // eslint-disable-line\nconst errorExample = require('!!raw-loader!./examples/ErrorObject.js'); // eslint-disable-line\nconst errorMessageExample = require('!!raw-loader!./examples/ErrorMessage.js'); // eslint-disable-line\nconst customValidatorExample = require('!!raw-loader!./examples/CustomValidator.js'); // eslint-disable-line\nconst customAsyncValidatorExample = require('!!raw-loader!./examples/CustomAsyncValidator.js'); // eslint-disable-line\nconst customFormValidatorExample = require('!!raw-loader!./examples/CustomFormValidator.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ApiPage\n      title=\"Validators\"\n      description=\"There are two types of validators, synchronous and asynchronous validators.\n      Those can be attached to either a Form or a FormGroup and will get triggered automatically.\"\n      codeExample={introExample}\n      parent=\"core\"\n      hideComponentLink\n    >\n      <h2>Default validators</h2>\n      <p>\n        <mark>react-ocean-forms</mark> ships with the following validators. Those\n        only support <Link to=\"../field\">Fields</Link>, if you need <Link to=\"../field-group\">FieldGroup</Link> validators,\n        you have to implement your own validator.\n      </p>\n\n      <PropInfo name=\"validators.required\" type=\"synchronous validator\">\n        Checks if any value is present.\n      </PropInfo>\n\n      <PropInfo name=\"validators.alphaNumeric\" type=\"synchronous validator\">\n        Checks if the input is alpha numeric.\n      </PropInfo>\n\n      <PropInfo name=\"validators.minLength\" type=\"synchronous validator with parameters\">\n        Checks if the value has a given minimum length.\n      </PropInfo>\n\n      <PropInfo name=\"validators.maxLength\" type=\"synchronous validator with parameters\">\n        Checks if the value has a given maximum length.\n      </PropInfo>\n\n      <h2>Validation behaviour</h2>\n      <p>\n        Validators can be triggered by three events: <mark>change</mark> or <mark>blur</mark> of\n        a <Link to=\"../field\">Field</Link>, or <mark>submit</mark> of the <Link to=\"../form\">Form</Link>.\n        The validation will be performed as following:\n      </p>\n\n      <PropInfo name=\"Field.onChange\">\n        <ol>\n          <li>\n            Invoke the <mark>synchronous validators</mark> of a <Link to=\"../field\">Field</Link>. The validators will\n            be called one by one, regarding of their position in the validators Array. If a validator\n            returns an error, the subsequential validators will <strong>not</strong> be called.\n          </li>\n          <li>\n            <p>\n              If the prop <mark>asyncValidateOnChange</mark> is set to true (either on the Field or the Form),\n              then the Form will wait the time defined in <mark>asyncValidationWait</mark> to see if the\n              user will change the input again.\n            </p>\n            <p>\n              If the value didn't change and the synchronous validators are all valid, then the\n              <mark>asynchronous validators</mark> will be called. All the validators are called at the same time\n              and the <Link to=\"../field\">Field</Link> will wait for the result of each of them.\n            </p>\n          </li>\n          <li>\n            If any of the validators return an error, the field is marked as invalid.\n          </li>\n        </ol>\n      </PropInfo>\n\n      <PropInfo name=\"Field.onBlur\">\n        <ol>\n          <li>\n            If the field value didn't change since the last validation and the prop <mark>asyncValidateOnChange</mark>\n            is true, then the validation won't be called again. This is to prevent unnecessary async validations.\n            Otherwise:\n          </li>\n          <li>\n            Invoke the <mark>synchronous validators</mark> of a <Link to=\"../field\">Field</Link>. The validators will\n            be called one by one, regarding of their position in the validators Array. If a validator\n            returns an error, the subsequential validators will <strong>not</strong> be called.\n          </li>\n          <li>\n            The <mark>asynchronous validators</mark> will be called. All the validators are called at the same time\n            and the <Link to=\"../field\">Field</Link> will wait for the result of each of them.\n          </li>\n          <li>\n            If any of the validators return an error, the field is marked as invalid.\n          </li>\n        </ol>\n      </PropInfo>\n\n      <PropInfo name=\"Form.onSubmit\">\n        <ol>\n          <li>\n            The form will iterate through each field and invoke the validation. The fields will immediately call both\n            their sync and async validators.\n          </li>\n          <li>\n            If all fields are valid, the <mark>Form.onValidate</mark> function will be called. This is a form-wide synchronous\n            validator. If the form-wide validation returns an error, the submit will be cancelled.\n          </li>\n          <li>\n            All the errors are displayed and the viewport will be scrolled to the <mark>ValidationSummary</mark>.\n          </li>\n        </ol>\n      </PropInfo>\n\n      <PropInfo name=\"FieldGroups\">\n        <Link to=\"../field-group\">FieldGroups</Link> behave in the same way as <Link to=\"../field\">Fields</Link>.\n        The Fields of the Group will pass their onChange and onBlur events to the parent group, thus triggering\n        the group-wide validation. The FieldGroup will validate no matter what the validation results of the Fields are.\n      </PropInfo>\n\n      <h2>Validators with parameters</h2>\n      <p>\n        If a validator needs additional parameters (like <mark>minLength</mark> and <mark>maxLength</mark> do), you\n        can use the helper function <mark>validators.withParam</mark>. Example usage to pass the parameter 5 to the minLength validator:\n      </p>\n      <PrismCode className=\"lang-jsx\" component=\"pre\">{paramsExample}</PrismCode>\n\n      <h2>Writing your own validator</h2>\n      <p>You can very easily add your own validation logic by writing custom validation functions.</p>\n\n      <PropInfo name=\"Custom synchronous validator\">\n        <p>\n          The validator function will receive the current field value and the form context, and must\n          return undefined if the value is valid or an error with the error message.\n        </p>\n\n        <h6>Arguments</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">value <span className=\"text-info font-weight-normal font-italic\">(any)</span></dt>\n          <dd className=\"col-sm-9\">\n            Contains the current field value.\n          </dd>\n          <dt className=\"col-sm-3\">context <span className=\"text-info font-weight-normal font-italic\">(Object)</span></dt>\n          <dd className=\"col-sm-9\">\n            Contains the current form context that can be used for advanced validation. See <Link to=\"../form\">Form</Link> for\n            further information about the form context.\n          </dd>\n        </dl>\n\n        <h6>Expected return value</h6>\n        <p>The validator must return one of the following values:</p>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\"><span className=\"text-info\">undefined</span></dt>\n          <dd className=\"col-sm-9\">\n            The field is valid.\n          </dd>\n          <dt className=\"col-sm-3\"><span className=\"text-info\">String</span></dt>\n          <dd className=\"col-sm-9\">\n            The field is invalid. The string should contain either a message id, or a raw\n            error message if you don't need i18n features.\n          </dd>\n          <dt className=\"col-sm-3\"><span className=\"text-info\">Object</span></dt>\n          <dd className=\"col-sm-9\">\n            The field is invalid. An error object can be used instead of a String to be able\n            to use message templates. This is useful if you use i18n and message-ids. The\n            error object must have the following shape:\n            <PrismCode className=\"lang-jsx\" component=\"pre\">{errorExample}</PrismCode>\n            This allows you to write your error message as following:\n            <PrismCode className=\"lang-jsx\" component=\"pre\">{errorMessageExample}</PrismCode>\n          </dd>\n        </dl>\n\n        <h6>Simple example validator</h6>\n        <p>Example implementation of an validator that checks if the input is the value 'OK'.</p>\n        <PrismCode className=\"lang-jsx\" component=\"pre\">{customValidatorExample}</PrismCode>\n      </PropInfo>\n\n      <PropInfo name=\"Custom asynchronous validator\">\n        <p>\n          The validator function will receive the current field value and the form context, and must\n          return a Promise. The promise must then resolve to undefined if the value is valid, otherwise\n          an error with the error message. The parameters and expected return (resolved) values are\n          the same as for <mark>Custom synchronous validators</mark>.\n        </p>\n\n        <h6>Simple example validator</h6>\n        <p>Example implementation of an asynchronous validator that checks the value against an api.</p>\n        <PrismCode className=\"lang-jsx\" component=\"pre\">{customAsyncValidatorExample}</PrismCode>\n      </PropInfo>\n\n      <PropInfo name=\"Custom form-wide validator\">\n        <p>\n          The form wide validator is attached to the <mark>Form.onSubmit</mark> and is triggered when the\n          form is submitted and all the Fields are valid. While form-wide validation is supported, it should\n          be avoided. Try to attach your validation to Fields or FieldGroups if possible.\n        </p>\n\n        <h6>Arguments</h6>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\">values <span className=\"text-info font-weight-normal font-italic\">(Object)</span></dt>\n          <dd className=\"col-sm-9\">\n            Contains all the field values of the form.\n          </dd>\n        </dl>\n\n        <h6>Expected return value</h6>\n        <p>The validator must return one of the following values:</p>\n        <dl className=\"row\">\n          <dt className=\"col-sm-3\"><span className=\"text-info\">null</span></dt>\n          <dd className=\"col-sm-9\">\n            The form is valid.\n          </dd>\n          <dt className=\"col-sm-3\"><span className=\"text-info\">Object</span></dt>\n          <dd className=\"col-sm-9\">\n            The form is invalid. The object must contain the error messages / objects of each\n            invalid field.\n          </dd>\n        </dl>\n\n        <h6>Simple example validator</h6>\n        <p>Example implementation of an validator that does a validation form-wide.</p>\n        <PrismCode className=\"lang-jsx\" component=\"pre\">{customFormValidatorExample}</PrismCode>\n      </PropInfo>\n    </ApiPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport FormPage from './FormPage';\nimport FieldPage from './FieldPage';\nimport FieldGroupPage from './FieldGroupPage';\nimport ValidationSummaryPage from './ValidationSummaryPage';\nimport InputPage from './InputPage';\nimport FormButtonPage from './FormButtonPage';\nimport FormTextPage from './FormTextPage';\nimport ValidatorsPage from './ValidatorsPage';\nimport NotFound from '../../not-found';\n\nfunction Core() {\n  return (\n    <Switch>\n      <Route path=\"/api/core/form/\" component={FormPage} />\n      <Route path=\"/api/core/field/\" component={FieldPage} />\n      <Route path=\"/api/core/field-group/\" component={FieldGroupPage} />\n      <Route path=\"/api/core/validation-summary/\" component={ValidationSummaryPage} />\n      <Route path=\"/api/core/input/\" component={InputPage} />\n      <Route path=\"/api/core/form-button/\" component={FormButtonPage} />\n      <Route path=\"/api/core/form-text/\" component={FormTextPage} />\n      <Route path=\"/api/core/validators/\" component={ValidatorsPage} />\n      <Redirect from=\"/api/core\" to=\"/api/core/form\" exact />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  );\n}\n\nexport default Core;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/Input.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ApiPage\n      title=\"Input\"\n      description=\"Defines a bootstrap form line containing a label and an input. Additionally it can\n      render an info button and info alert as well as validation messages. If the user adds the required\n      validator then it will mark the field as required as well.\"\n      codeExample={introExample}\n      parent=\"bootstrap\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"info\" type=\"String\">\n        Message id of the info text that will be displayed along the input. If you don't\n        want to use any i18n features you can pass a raw message instead.\n      </PropInfo>\n\n      <PropInfo name=\"prefix\" type=\"String or Function\">\n        Displays a prefix in front of the input. Supports custom components as well.\n      </PropInfo>\n\n      <PropInfo name=\"suffix\" type=\"String or Function\">\n        Displays a suffix after the input. Supports custom components as well.\n      </PropInfo>\n\n      <PropInfo name=\"type\" type=\"String\" defaultValue=\"text\">\n        HTML5 input type of the input element.\n      </PropInfo>\n\n      <h2>Events</h2>\n      <p>See <Link to=\"../../core/field\">Field</Link> for event handling.</p>\n    </ApiPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/Select.js'); // eslint-disable-line\n\nfunction SelectPage() {\n  return (\n    <ApiPage\n      title=\"Select\"\n      description=\"Defines a bootstrap form line containing a react-select dropdown. Additionally it can render\n      an info button and info alert as well as validation messages. If the user adds the required validator then\n      it will mark the field as required as well.\"\n      codeExample={introExample}\n      parent=\"bootstrap\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"options\" type=\"Array\" required>\n        An array of all items that can be selected. The array must contain of objects with\n        the properties <mark>label</mark> and <mark>value</mark>.\n      </PropInfo>\n\n      <PropInfo name=\"multi\" type=\"Boolean\" defaultValue=\"false\">\n        Enable/disable multiselect. See the documentation of <mark>react-select</mark> for further details.\n      </PropInfo>\n\n      <PropInfo name=\"placeholder\" type=\"String\">\n        A placeholder text that will be displayed by the dropdown while nothing is selected.\n      </PropInfo>\n\n      <PropInfo name=\"info\" type=\"String\">\n        Message id of the info text that will be displayed along the input. If you don't\n        want to use any i18n features you can pass a raw message instead.\n      </PropInfo>\n\n      <PropInfo name=\"defaultValue\" type=\"Object:{ label: 'Option 2', value: 2 }\">\n        Value that will be displayed initially. You can initialize this value before rendering. You have to initialize \n        with an object like in options. If you use defaultValue you need not use property value.\n      </PropInfo>\n\n\n      <h2>Events</h2>\n      <p>See <Link to=\"../../core/field\">Field</Link> for event handling.</p>\n    </ApiPage>\n  );\n}\n\nexport default SelectPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/Check.js'); // eslint-disable-line\n\nfunction CheckPage() {\n  return (\n    <ApiPage\n      title=\"Check\"\n      description=\"Defines a bootstrap form line containing a checkbox with the label as the checkbox\n      text. Additionally it can render an info button and info alert as well as validation messages.\n      If the user adds the required validator then it will mark the field as required as well.\"\n      codeExample={introExample}\n      parent=\"bootstrap\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"info\" type=\"String\">\n        Message id of the info text that will be displayed along the input. If you don't\n        want to use any i18n features you can pass a raw message instead.\n      </PropInfo>\n\n      <h2>Events</h2>\n      <p>See <Link to=\"../../core/field\">Field</Link> for event handling.</p>\n    </ApiPage>\n  );\n}\n\nexport default CheckPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/DatePicker.js'); // eslint-disable-line\n\nfunction DatePickerPage() {\n  return (\n    <ApiPage\n      title=\"DatePicker\"\n      description=\"Defines a bootstrap form line containing a label and a react-datetime input.\n      Additionally it can render an info button and info alert as well as validation messages.\n      If the user adds the required validator then it will mark the field as required as well.\"\n      codeExample={introExample}\n      parent=\"bootstrap\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"dateFormat\" type=\"Boolean or String\" defaultValue=\"true\">\n        Moment.js date format. See the <a href=\"https://github.com/YouCanBookMe/react-datetime#api\">react-datetime</a> api\n        for more information.\n      </PropInfo>\n\n      <PropInfo name=\"timeFormat\" type=\"Boolean or String\" defaultValue=\"true\">\n        Moment.js time format. See the <a href=\"https://github.com/YouCanBookMe/react-datetime#api\">react-datetime</a> api\n        for more information.\n      </PropInfo>\n\n      <PropInfo name=\"info\" type=\"String\">\n        Message id of the info text that will be displayed along the input. If you don't\n        want to use any i18n features you can pass a raw message instead.\n      </PropInfo>\n\n      <PropInfo name=\"placeholder\" type=\"String\">\n        A placeholder text that will be displayed by the dropdown while nothing is selected.\n      </PropInfo>\n\n      <h2>Events</h2>\n      <p>See <Link to=\"../../core/field\">Field</Link> for event handling.</p>\n    </ApiPage>\n  );\n}\n\nexport default DatePickerPage;\n","import React from 'react';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/ValidationSummary.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ApiPage\n      title=\"ValidationSummary\"\n      description=\"Displays a clickable list of errors from the current form. When an error is clicked,\n      the corresponding input field is focused.\"\n      codeExample={introExample}\n      parent=\"bootstrap\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"id\" type=\"String\" required>\n        Id of this input. Will be used as the unique identifier of the div.<br />\n        <strong>Must be unique form wide!</strong>\n      </PropInfo>\n\n      <PropInfo name=\"title\" type=\"String\">\n        Message that will be used as the title, wrapped in a <mark>h4</mark>.\n      </PropInfo>\n\n      <PropInfo name=\"disableFocusOnSubmit\" type=\"Boolean\" defaultValue=\"false\">\n        If set to true the validation summary will stop automatically scrolling to itself\n        when the user clicks on a submit button and the form is invalid.\n      </PropInfo>\n\n      <h2>Events</h2>\n      <p>The <mark>ValidationSummary</mark> doesn't emit any events.</p>\n    </ApiPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ApiPage from '../shared/ApiPage';\n\nconst introExample = require('!!raw-loader!./examples/FormButton.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ApiPage\n      title=\"FormButton\"\n      description=\"Defines a bootstrap button that integrates into the Form context.\n      It will be disabled when the form is busy or disabled.\"\n      codeExample={introExample}\n      parent=\"bootstrap\"\n    >\n      <h2>Properties</h2>\n      <p>\n        This component is just a wrapper for reactstrap buttons as a custom element inside\n        the <Link to=\"../../core/form-button\">Core Form-Button</Link>. It will pass all props\n        to the underlying button. Please refer to the <a href=\"http://reactstrap.github.io/components/buttons/\">reactstrap documentation</a> and\n        the Form-Button documentation for the available props.\n      </p>\n    </ApiPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ApiPage from '../shared/ApiPage';\nimport PropInfo from '../shared/PropInfo';\n\nconst introExample = require('!!raw-loader!./examples/OnOffToggleButton.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ApiPage\n      title=\"OnOffToggleButton\"\n      description=\"Defines a bootstrap button group that can be toggled between true and false.\"\n      codeExample={introExample}\n      parent=\"bootstrap\"\n    >\n      <h2>Properties</h2>\n      <PropInfo name=\"onLabel\" type=\"String\" defaultValue=\"ojs_togglebutton_on (On)\">\n        Message id of the info text that will be displayed for the \"on\" button.\n        If you don't want to use any i18n features you can pass a raw message instead.\n      </PropInfo>\n\n      <PropInfo name=\"offLabel\" type=\"String\" defaultValue=\"ojs_togglebutton_on (Off)\">\n        Message id of the info text that will be displayed for the \"off\" button.\n        If you don't want to use any i18n features you can pass a raw message instead.\n      </PropInfo>\n\n      <PropInfo name=\"info\" type=\"String\">\n        Message id of the info text that will be displayed along the input. If you don't\n        want to use any i18n features you can pass a raw message instead.\n      </PropInfo>\n\n      <PropInfo name=\"prefix\" type=\"String or Function\">\n        Displays a prefix in front of the input. Supports custom components as well.\n      </PropInfo>\n\n      <PropInfo name=\"suffix\" type=\"String or Function\">\n        Displays a suffix after the input. Supports custom components as well.\n      </PropInfo>\n\n      <h2>Events</h2>\n      <p>See <Link to=\"../../core/field\">Field</Link> for event handling.</p>\n    </ApiPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport InputPage from './InputPage';\nimport SelectPage from './SelectPage';\nimport CheckPage from './CheckPage';\nimport DatePickerPage from './DatePickerPage';\nimport ValidationSummaryPage from './ValidationSummaryPage';\nimport FormButtonPage from './FormButtonPage';\nimport OnOffToggleButtonPage from './OnOffToggleButtonPage';\nimport NotFound from '../../not-found';\n\nfunction Bootstrap() {\n  return (\n    <Switch>\n      <Route path=\"/api/bootstrap/input/\" component={InputPage} />\n      <Route path=\"/api/bootstrap/select/\" component={SelectPage} />\n      <Route path=\"/api/bootstrap/check/\" component={CheckPage} />\n      <Route path=\"/api/bootstrap/date-picker/\" component={DatePickerPage} />\n      <Route path=\"/api/bootstrap/validation-summary/\" component={ValidationSummaryPage} />\n      <Route path=\"/api/bootstrap/form-button/\" component={FormButtonPage} />\n      <Route path=\"/api/bootstrap/on-off-toggle-button/\" component={OnOffToggleButtonPage} />\n      <Redirect from=\"/api/bootstrap\" to=\"/api/bootstrap/input\" exact />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  );\n}\n\nexport default Bootstrap;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ApiPage from '../shared/ApiPage';\n\nconst introExample = require('!!raw-loader!./examples/IntlForm.js'); // eslint-disable-line\n\nfunction FieldPage() {\n  return (\n    <ApiPage\n      title=\"IntlForm\"\n      description=\"Drop-in replacement for regular Form component. Enables react-intl support.\n      Must live inside a IntlProvider.\"\n      codeExample={introExample}\n      parent=\"intl\"\n    >\n      <h2>Properties</h2>\n      <p>See <Link to=\"../../core/form\">Form</Link> for properties.</p>\n\n      <h2>Events</h2>\n      <p>See <Link to=\"../../core/form\">Form</Link> for event handling.</p>\n    </ApiPage>\n  );\n}\n\nexport default FieldPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport IntlFormPage from './IntlFormPage';\nimport NotFound from '../../not-found';\n\nfunction Intl() {\n  return (\n    <Switch>\n      <Route path=\"/api/intl/intl-form/\" component={IntlFormPage} />\n      <Redirect from=\"/api/intl\" to=\"/api/intl/intl-form\" exact />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  );\n}\n\nexport default Intl;\n","import React from 'react';\nimport { Row, Col, Nav, NavItem, NavLink } from 'reactstrap';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\n\nimport CoreComponents from './core';\nimport BootstrapComponents from './bootstrap';\nimport IntlComponents from './intl';\nimport NotFound from '../not-found';\n\nfunction Api() {\n  return (\n    <Row>\n      <Col md=\"8\">\n        <Switch>\n          <Route path=\"/api/core\" component={CoreComponents} />\n          <Route path=\"/api/bootstrap\" component={BootstrapComponents} />\n          <Route path=\"/api/intl\" component={IntlComponents} />\n          <Redirect from=\"/api\" to=\"/api/core/form\" exact />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </Col>\n      <Col md=\"4\">\n        <Nav vertical>\n          <h6>react-ocean-forms</h6>\n          <NavLink tag={Link} to=\"/api/core/form/\">Form</NavLink>\n          <NavLink tag={Link} to=\"/api/core/field/\">Field</NavLink>\n          <NavLink tag={Link} to=\"/api/core/field-group/\">FieldGroup</NavLink>\n          <NavLink tag={Link} to=\"/api/core/validation-summary/\">ValidationSummary</NavLink>\n          <NavLink tag={Link} to=\"/api/core/input/\">Input</NavLink>\n          <NavLink tag={Link} to=\"/api/core/form-button/\">FormButton</NavLink>\n          <NavLink tag={Link} to=\"/api/core/form-text/\">FormText</NavLink>\n          <NavLink tag={Link} to=\"/api/core/validators/\">Validators</NavLink>\n        </Nav>\n\n        <Nav vertical>\n          <h6 className=\"mt-4\">react-ocean-forms-bootstrap</h6>\n          <NavLink tag={Link} to=\"/api/bootstrap/input/\">Input</NavLink>\n          <NavLink tag={Link} to=\"/api/bootstrap/select/\">Select</NavLink>\n          <NavLink tag={Link} to=\"/api/bootstrap/check/\">Check</NavLink>\n          <NavLink tag={Link} to=\"/api/bootstrap/date-picker/\">DatePicker</NavLink>\n          <NavLink tag={Link} to=\"/api/bootstrap/validation-summary/\">ValidationSummary</NavLink>\n          <NavLink tag={Link} to=\"/api/bootstrap/form-button/\">FormButton</NavLink>\n          <NavLink tag={Link} to=\"/api/bootstrap/on-off-toggle-button/\">OnOffToggleButton</NavLink>\n        </Nav>\n\n        <Nav vertical>\n          <h6 className=\"mt-4\">react-ocean-forms-react-intl</h6>\n          <NavItem>\n            <NavLink tag={Link} to=\"/api/intl/intl-form/\">IntlForm</NavLink>\n          </NavItem>\n        </Nav>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Api;\n","import React, { Component } from 'react';\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Collapse } from 'reactstrap';\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom';\n\nimport 'babel-polyfill';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-select/dist/react-select.css';\nimport 'react-datetime/css/react-datetime.css';\n\nimport Prism from \"prismjs\"; // eslint-disable-line\n\nimport Home from './views/home';\nimport Components from './views/components';\nimport Api from './views/api';\nimport NotFound from './views/not-found';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <HashRouter onUpdate={() => { window.scrollTo(0, 0) }}>\n        <div className=\"App\">\n          <Navbar dark color=\"dark\" expand=\"md\" fixed=\"top\">\n            <NavbarBrand tag={Link} to=\"/\">Ocean Forms</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink tag={Link} to=\"/components\">Components</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} to=\"/api\">API</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"https://github.com/environment-agency-austria/react-ocean-forms\">GitHub</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n\n          <div className=\"content container\">\n              <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/components\" component={Components} />\n                <Route path=\"/api\" component={Api} />\n                <Route path=\"*\" component={NotFound} />\n              </Switch>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}