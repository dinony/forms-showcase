{"version":3,"sources":["../node_modules/refractor/lang/fsharp.js"],"names":["fsharp","Prism","languages","extend","comment","pattern","lookbehind","keyword","string","greedy","number","insertBefore","preprocessor","alias","inside","directive","module","exports","displayName","aliases"],"mappings":"2FAMA,SAAAA,EAAAC,GACAA,EAAAC,UAAAF,OAAAC,EAAAC,UAAAC,OAAA,SACAC,QAAA,EACAC,QAAA,4BACAC,YAAA,GACK,CACLD,QAAA,mBACAC,YAAA,IAEAC,QAAA,koBACAC,OAAA,CACAH,QAAA,wEACAI,QAAA,GAEAC,OAAA,6IAEAT,EAAAC,UAAAS,aAAA,oBACAC,aAAA,CACAP,QAAA,kBACAQ,MAAA,WACAC,OAAA,CACAC,UAAA,CACAV,QAAA,gDACAC,YAAA,EACAO,MAAA,eA5BAG,EAAAC,QAAAjB,EACAA,EAAAkB,YAAA,SACAlB,EAAAmB,QAAA","file":"static/js/react-syntax-highlighter_languages_refractor_fsharp.69ec5d9a.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = fsharp;\nfsharp.displayName = 'fsharp';\nfsharp.aliases = [];\n\nfunction fsharp(Prism) {\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [{\n      pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true\n    }],\n    keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1)B?/,\n      greedy: true\n    },\n    number: [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/]\n  });\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /^[^\\r\\n\\S]*#.*/m,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  });\n}"],"sourceRoot":""}