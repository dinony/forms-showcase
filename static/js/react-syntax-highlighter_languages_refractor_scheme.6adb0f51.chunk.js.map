{"version":3,"sources":["../node_modules/refractor/lang/scheme.js"],"names":["scheme","Prism","languages","comment","string","pattern","greedy","keyword","lookbehind","builtin","number","boolean","operator","function","punctuation","module","exports","displayName","aliases"],"mappings":"4FAMA,SAAAA,EAAAC,GACAA,EAAAC,UAAAF,OAAA,CACAG,QAAA,MACAC,OAAA,CACAC,QAAA,kCACAC,QAAA,GAEAC,QAAA,CACAF,QAAA,oLACAG,YAAA,GAEAC,QAAA,CACAJ,QAAA,gNACAG,YAAA,GAEAE,OAAA,CACAL,QAAA,qDACAG,YAAA,GAEAG,QAAA,QACAC,SAAA,CACAP,QAAA,8BACAG,YAAA,GAEAK,SAAA,CACAR,QAAA,qBACAG,YAAA,GAEAM,YAAA,QAhCAC,EAAAC,QAAAhB,EACAA,EAAAiB,YAAA,SACAjB,EAAAkB,QAAA","file":"static/js/react-syntax-highlighter_languages_refractor_scheme.6adb0f51.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = scheme;\nscheme.displayName = 'scheme';\nscheme.aliases = [];\n\nfunction scheme(Prism) {\n  Prism.languages.scheme = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'[^('\\s]*/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)/,\n      lookbehind: true\n    },\n    builtin: {\n      pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)/,\n      lookbehind: true\n    },\n    number: {\n      pattern: /(\\s|[()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n      lookbehind: true\n    },\n    boolean: /#[tf]/,\n    operator: {\n      pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)/,\n      lookbehind: true\n    },\n    function: {\n      pattern: /(\\()[^\\s()]*(?=\\s)/,\n      lookbehind: true\n    },\n    punctuation: /[()]/\n  };\n}"],"sourceRoot":""}